FORMAT: 1A
HOST: https://api.ehealth.gov.ua

# HTTP API ЕСОЗ

## Загальні положення

Електронна система охорони здоров'я (ЕСОЗ) складається з
центральної бази даних (ЦБД) та медичних інформаційних
систем (МІС). ЦБД належить державі в особі Національної
служби здоровʼя України (НСЗУ).

Користувачами ЕСОЗ є фізичні та юридичні особи, які
зареєстровані в електронній системі охорони здоров'я
і мають права доступу відповідно до Порядку функціонування
електронної системи охорони здоров'я.

## Маніфест програмного інтерфейсу

Наш інтерфейс прикладного програмування (API) організовано
навколо REST. Він має передбачувані, орієнтовані на
ресурси URL-адреси та використовує коди відповідей HTTP
для вказівки на помилки API. Ми використовуємо автентифікацію та дієслова HTTP,
які розуміють стандартні клієнти HTTP.

### Дієслова

ЕСОЗ API імлементує наступні дієслова згідно RESTful:

- `HEAD` - Отримати тільки інформацію в заголовках про ресурс.
- `GET` - Отримати ресурс (кешовано і ідемподентно). Не може модифікувати облікові дані на сервері.
- `POST` - Створити новий ресурс.
- `PUT` - Замінити ресурс коли клієту все одно є чи ні ресурс на сервері.
- `PATCH` - Змінити ресурс тільки коли ресурс є на сервері.
- `DELETE` - Видалити ресурс.

### Коди помилок

HTTP код помлки | Опис
--------- | -----------
`200` | Все працює як повинно.
`201` | Створений новий інформаційний об'єкт.
`202` | Прийнято інформаційний об'єкт.
`400` | Погано сформований запит 
`401` | Неавторизовано. Немає валідного API ключа.
`402` | Параметри були валідні, але запит не вдався.
`403` | Інформаційний цільовий або джерельний обліковий запис відключено.
`404` | Інформаційий об'єкт не знайдено. Запитуваний ресурс не існує.
`415` | Не вірний ```Content-Type``` HTTP заголовок.
`422` | Семантична помилка або помилка типу. До прикладу, значення поля поза межами допустимих словникових значень його типу.
`409` | Логічна помилка. До прикладу, об'єкт в поточному статусі не може бути модифікований. 
`429` | Забагато запитів. Вичерпано кредит на кількість запитів за одиницю часу.
`500` `502` `503` `504` | Помилка сервера. Щось пішло не так на нашій стороні.

### Іменування полів

Іменування полів здійснюється в "стилі змії" (BSD). Типовий приклад `snake_case`.
Мотивація [описана тут](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=&arnumber=5521745).

### Аутентифікація

ЕСОЗ використовує наступний тьоступеневий механізми аутентифікації:

1) Токен сесії (oAuth);
2) Токен застосунку (oAuth);
3) Токен доступу (JWT).

### Ідентифікатор запиту

Each API request has an associated request identifier. You can find it in ```X-Request-ID``` response header or inside ```meta.request_id``` property of returned JSON.

You can also find request identifiers in the URLs of individual request logs in your Dashboard. If you need to contact us about a specific request, providing the request identifier will ensure the fastest possible resolution.

All Request ID's are prefixed with a human-readable name of server that served your request.

```
X-Request-ID: flash-99spDSoim3i
```

### Тип тіла запиту

`Content-Type` header should be always `application/json`

### Структура запиту

Request consist with a root object that contain resource and metadata as it's childs:

**Request example:**

```json
{
  "resource": {
    "name": "Alex",
    "surname": "Gray",
    "email": "me@example.com",
    "credentials: [
      {"method": "passsword", "password": "notasecret"}
    ]
  },
  "format_response": true,
  "redirect_browser": true
}
```

### Структура відповіді

Response can consist of 5 root properties:

- `meta` - URL of the requested resource (`url`); requested response type (`type`, may be either `list` or `object`); HTTP status (`code`); idempotency key (`idempotency_key`); request id (`request_id`).
- `urgent` - Notifications and counters.
- `errors` - Error description. MUST be present when status code is not 2XX, 3XX. CAN NOT be present when `data` is present.
- `data` - Requested resource. MUST be present when status code is 2XX, 3XX. CAN NOT be present when `error` is present.
- `paging` - Pagination data.
- `sandbox` - Optional data provided by `sandbox` environment, for development purposes.

**Response example:**

```json
{
  "meta": {
    "url": "https://qbill.ly/transactions/",
    "type": "list",
    "code": "200",
    "idempotency_key": "iXXekd88DKqo",
    "request_id": "qudk48fFlaP"
  },
  "urgent": {
    "notifications": ["Read new emails!"],
    "unseen_payments": 10
  },
  "data": {
    "type": "resource_name",
    <...>
  },
  "paging": {
    "limit": 50,
    "cursors": {
      "starting_after": "MTAxNTExOTQ1MjAwNzI5NDE=",
      "ending_before": "NDMyNzQyODI3OTQw"
    },
    "has_more": true
  },
  "sandbox": {
    "debug_varibale": "39384",
    "live": "false"
  }
}
```

### Помилки

All errors is returned in JSON format if another `Content-Type` is not specified. This means that your will receive JSON for requests with HTTP 415 code when incorrect `Content-Type` is provided.

#### Реквізити помилок

You can find all necessary information about occurred error in a response `error` property. It can have following fields:

Fields | Required | Description
--------- | ----------- | -----------
`type` | true | General error type. You should return human-readable error message based on this field as a key. Type descriptions is listed in next section.
`invalid` | false | Collection of validation errors for your request.
`invalid[].entry_type` | true | Type of invalid field.
`invalid[].entry` | false | Name or JSON path to invalid data property.
`invalid[].rules` | false| Failed rules for invalid property. You can find supported validation rules at [Request Validators](#request-validators) table. Server may optinally skip this field, when validation rules is perefferd to stay secret or hard to extract from validator.
`invalid[].params` | false| Optional parameters that can be used in a human-readable error message, to make it easier to understand. Usually it contains limit values for failed validator.
`message` | false | Human readable message for API developer.

**Example error response:**

```json
{
    "data": {
        "error": {
            "invalid": [
                {
                    "entry": "$.type",
                    "entry_type": "json_data_property",
                    "rules": [
                        {
                            "description": "Value AMB/ not found in the dictionary eHealth/episode_types",
                            "params": [],
                            "rule": "invalid"
                        }
                    ]
                }
            ],
            "message": "Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors.",
            "type": "validation_failed"
        },
        "eta": "2019-04-23T09:13:02.415",
        "status": "failed",
        "status_code": 422
    },
    "meta": {
        "code": 200,
        "request_id": "806e0f81-ac97-470e-988f-6391e9abf642#28157",
        "type": "object",
        "url": "http://api-medical-events.me.svc.cluster.local/api/jobs/5cbed6e2ed59d30001e54b92"
    }
}
```

#### Типи помилок

Parameter | Description
--------- | -----------
`access_denied` | Authorization not passed
`forbidden` | User does not have permissions to access the resource
`content_type_invalid` | Invalid HTTP request `content-type`.
`validation_failed` | Failed validation on JSON request body or form data. 
`request_too_large` | Request body was to large to process it.
`request_conflict`| Request causes logical errors
`internal error`| Error on the server

#### Типи атомарних помилок

Entry Type | Description
--------- | -----------
`json_data_proprty` | JSON document is invalid. `entry` will contain JSON Path to invalid property.
`form_data_field` | HTTP request field (for `form-data` requests) is invalid. 
`query_param` | HTTP query parameter is invalid.
`body` | Mailformed request body.
`header` | HTTP request header is invalid.

#### Правила валідації

Повний перелік валідаційних помилок:

Rule | Params | Description
-------------- | ----------- | -----------
`cast` | `[types]` | The field type should be in `types`.
`required` | `[]` | The field is required and should not be `nil`.
`format` | `[patterns]` | The field should match all regular expressions in `patterns` list.
`inclusion` | `[enum]` | Field value should be in `enum`.
`invalid`| `[]` | Field value is not valid according to specification
`exclusion` | `[enum]` | Field value should NOT be in `enum`.
`subset` | `[set]` | Field value should be subset of `set`.
`length` | `{min:_, max:_, is:_, exclusive:true|false}` | List or string length should be equal to `is` value, less than `max` and bigger than `min` value. Params is optional, but one of them should always be present. `exclusive` is false by default.
`number` | `{greater_than:_, less_than:_, greater_than_or_equal_to:_, less_than_or_equal_to:_, multiple_of:_}` | The field value must be a number that is greater than `greater_than` and less than `less_than`.
`confirmation` | `[]` | The field value of field must match confirmed field (eg. `password_confirmation` should match `password`).
`acceptance` | `[]` | The field value should be true.
`email` | `[patterns]` | The field value must be a valid email address respectively to `patterns`.
`phone_number` | `[patterns]` | The field value must be a valid phone number respectively to `patterns`. *Usually it means that is should be in international format (with `+3`).*
`card_number` | `[]` | The field value should be a valid Visa or MasterCard card number. (By luhn algoryghm.)
`metadata` | `[]` | The field must be a [valid metadata object](http://docs.apimanifest.apiary.io/#introduction/optional-features/metadata).
`unique` | `[]` | The field must be a list with all it's items unique.
`schemata` | `[]` | JSON Schema specific error core.
`schema` | `[]` | JSON Schema specific error core.
`dependency` | `[json_paths]` | Property expects another property to exist.
`json` | `[]` | The field under validation must be a valid JSON string.
`authentification_code` | `{resent: true}` | OTP or other authentification code was invalid. User should retry with re-entering it. `resent` property will tel is code was automatically resent upon failed validation.
`date`, `datetime`, `timestamp` | `[after:_, before:_, after_or_at:_, before_or_at:_]` | Invalid datetime representation.
`url` | `[patterns]` | Field should contain a valid URL.

### Пейджінація

You can use next search parameters to operate pagination:

Arguments:

- `page_number` (optional) - A number of a page in the list;
- `page_size` (optional) -  A limit on the number of objects to be returned, between 1 and 100. Default: 50;


### HTTP редіректи

API uses HTTP redirection where appropriate. Clients should assume that any request may result in a redirection. Receiving an HTTP redirection is not an error and clients should follow that redirect. Redirect responses will have a Location header field which contains the URI of the resource to which the client should repeat the requests.

Статуси:

- `301` - Permanent redirection. The URI you used to make the request has been superseded by the one specified in the Location header field. This and all future requests to this resource should be directed to the new URI.
- `302`, `307` - Temporary redirection. The request should be repeated verbatim to the URI specified in the Location header field but clients should continue to use the original URI for future requests.
- `303` - The request was successfully performed, the result can be found by the redirect URI.
Other redirection status codes may be used in accordance with the HTTP 1.1 spec.

### Завантаження файлів

#### Для файлів менше 10МБ

Для малих файлів дозволяється використовувати base64 у якості кодування для JSON полів:

```
{
    name: "fieldName",
    image: "sdasdpjoijhwhwe83280u2380wef=="
}
```

#### Для великих файлів

Багато-становий процес завантаження файлів, який складається з наступних кроків:

1). Користувая ініціює завантаження;
2). Сервер надає посилання на медіа сховище для подальшого завантаження;
3). Користувач завантажує файл використовуючи надане посилання.

### Інша функціональність

#### Обмеження по ємності

Ми обмежуємо запити до API для гарантованого рівномірного розподілення між клієнтами.
Обмеження пропускної здатності правил мотивоване задля запобігання спаму і неправильного використання системи.
Поточна конфігурація ЕСОЗ допускає 1000 звернень до HTTP точок підключення за кожні 15 хвилин,
але це число може змінюватися нашими динамічними політиками.

### Ідемподентність запитів

From a RESTful service standpoint, for an operation (or service call) to be idempotent, clients can make that same call repeatedly while producing the same result. In other words, making multiple identical requests has the same effect as making a single request.
However, if you are working with async methods, new job will not be created before previous identical request is not performed.

### Впорядковані переліки та колекції

За замовчуванням, усі колекції впорядквані за зростаючим хронологічним порядком (від минулого до майбутнього).

## Group Автентифікація

Для середовищ використовуються відповідні точки підключення:

Влістивість | Значення
--------|-----
DEMO    | https://api-demo.ehealth.gov.ua
PREPROD | https://api-preprod.ehealth.gov.ua
PROD    | https://api.ehealth.gov.ua

Загалом схема аутентифіції, тобто отримання JWT Bearer, є триступеневим розширенням OAuth.
Приклад використання у фреймворку K6:

```
var user      = __ENV.USER;
var data      = JSON.parse(open("./assets/" + user));
var authorize = JSON.parse(open("./assets/authorize@" + user));
var grant     = JSON.parse(open("./assets/grant@" + user));

export function setupAuth() {

   let res1 = http.post("https://auth-demo.ehealth.gov.ua/auth/login",
       JSON.stringify(data), { headers: { 'Content-Type': 'application/json' } });
       check(res1, { "User is entered: ": r => r.json().meta.code < 300, });

   let res2 = http.post("https://auth-demo.ehealth.gov.ua/oauth/apps/authorize",
       JSON.stringify(authorize), { headers:
          { 'Content-Type': 'application/json',
            'Authorization' : 'Bearer ' + res1.json().data.value } });
       check(res2, { "User is authorized by app: ": r => r.json().meta.code < 300, });

   grant.token.code = res2.json().data ? res2.json().data.value : 'error';
   let res3 = http.post("https://auth-demo.ehealth.gov.ua/oauth/tokens",
       JSON.stringify(grant), { headers:
          { 'Content-Type': 'application/json',
            'Authorization' : 'Bearer ' + res1.json().data.value } });
       check(res3, { "User is granted: ": r => r.json().meta.code < 300, });

   return { data: res3 };
}
```

### Створення токена сесії через об'єкт [/auth/login]

#### Login [GET]

Влістивість | Значення
--------|-----
|ЕСОЗ API ID||
|Посилання на документацію|N/A|

+ Request (application/json)
    + Attributes (object)
        + token (object)
            + `grant_type`: `password` (string, required) - тип автентифікації для сесії
            + `email`: `user@company.com` (string) - поштова адреса користувача ЕСОЗ
            + `client_id`: (string, required) - ідентифікатор МІС
            + `scope`: `app:authorize' (string, require) - ABAС правило

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Створення токена сесії через параметри [GET /sign-in]

Влістивість | Значення
--------|-----
|ЕСОЗ API ID||
|Посилання на документацію|N/A|

+ Parameters
    + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
    + `redirect_uri`: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + email: email@example.com
    + `user_data`: `base64_string` - Auth request signed on client side
    + state: `eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9` (string, optional) - Randomly generated, opaque, and non-guessable string generated by client that will be transferred to client with grant code

+ Response 200 (text/html; charset=UTF-8)
    + Headers

#### Отримання токена доступу [POST /oauth/apps/authorize]

```
{
    "app": {
        "client_id": "00000000-0000-0000-0000-000000000000",
        "redirect_uri": "https://test.com",
        "scope": "division:read client:read app:read_pis employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read otp:read otp:write person:read patient_summary:read encounter:write encounter:read encounter:cancel episode:write episode:read job:read condition:read condition:write observation:read observation:write immunization:read immunization:write allergy_intolerance:read allergy_intolerance:write medication_statement:read medication_statement:write device:read device:write risk_assessment:read risk_assessment:write medication_dispense:read drugs:read medication_request:details medication_request:read medication_request:reject medication_request:resend medication_request_request:read medication_request_request:reject medication_request_request:sign medication_request_request:write diagnostic_report:read diagnostic_report:write diagnostic_report:cancel procedure:read procedure:write procedure:cancel service_request:makeinprogress service_request:complete service_request:recall service_request:cancel service_request:write service_request:read service_request:use approval:create program_service:read medication_administration:read medication_administration:write healthcare_service:read employee_role:read person_request:write person_request:read preperson:read preperson:write authentication_method_request:write merge_request:write merge_request:sign merge_request:read composition:create composition:search composition:read composition:sign composition:cancel care_plan:write care_plan:read approval:read approval:cancel license:read clinical_impression:read rule_engine_rule:read medical_event_context:read clinical_impression:write person_verification:details person_verification:write person_emergency_contact:read device_definitions:read device_request:write device_request:read device_request:resend device_request:revoke specimen:write specimen:read specimen:reject"
    }
}
```

+ Request (application/json)
    + Headers
        Authorization: Bearer 432fsdfg543252345tfgdsgdft2345 - access_token with the `app:authorize` scope
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes
        + app (required)
            + client_id: `client-1380df72-275a-11e7-93ae-92361f002671` (string, required) - ID of client that is granted with access to user's resources.
            + scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes that are granted to the client on the user's behalf.
            + `redirect_uri`: `http://example.com/my_success_login_page` (string, required) - URL of client where user will be redirected on Approval creation.

+ Response 201 (application/json)
    + Headers
        Location: http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (`Response_OK`)
        + urgent
            + `redirect_uri`: `http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09`

#### Отримання токена сесії [POST /oauth/tokens]

|Властивість |Значення |
|------------|---------|
|ЕСОЗ API ID||
|?Confluence spec|link|


```
{
    "token": {
        "grant_type": "authorization_code",
        "code": "00000000000000000000000000000000",
        "client_id": "00000000-0000-0000-0000-000000000000",
        "scope": "division:read employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read division:activate division:deactivate division:details division:read division:write employee:deactivate employee:details employee:read employee:write employee_request:approve employee_request:read employee_request:reject employee_request:write legal_entity:read healthcare_service:read healthcare_service:write employee_role:read employee_role:write"
    }
}
```

+ Request (application/json)
    + Headers
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Продовження токена сесії [POST /oauth/tokens]

|Властивість |Значення |
|------------|---------|
|ЕСОЗ API ID||
|?Confluence spec|link|


```
{
    "token": {
        "grant_type": "refresh_token",
        "code": "00000000000000000000000000000000",
        "client_secret": "...",
        "client_id": "00000000-0000-0000-0000-000000000000",
        "scope": "division:read employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read division:activate division:deactivate division:details division:read division:write employee:deactivate employee:details employee:read employee:write employee_request:approve employee_request:read employee_request:reject employee_request:write legal_entity:read healthcare_service:read healthcare_service:write employee_role:read employee_role:write"
    }
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Термінація сесії користувача [POST /auth/logout]

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

### Отримання NONCE [POST /oauth/nonce]

Ця точка доступу дозволяє отримати nonce (одноразовий JWT) для активного клієнта системи.
Поле `client_secret` необхідно передати, якщо тип клієнта = TRUSTED_PIS.
Приклад одноразового корисного навантаження:

```
{
   "aud": "mithril-login",
   "exp": 1523439201,
   "iat": 1523438301,
   "iss": "EHealth",
   "jti": "efe1f08e-d4b4-4cef-a02c-78ea4a1dda25",
   "nbf": 1523438300,
   "nonce": 123,
   "sub": 123,
   "typ": "доступ"
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `client_id`: `30074b6e-fbab-4dc1-9d37-88c21dab1847` (string, required)
        + `client_secret`: `c2778f3064753ea70de870a53795f5c9` (string, optional)


+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
           + token: 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJtaXRocmlsLWxvZ2luIiwiZXhwIjoxNTIzNDM5MjAxLCJpYXQiOjE1MjM0MzgzMDEsImlzcyI6IkVIZWFsdGgiLCJqdGkiOiJlZmUxZjA4ZS1kNGI0LTRjZWYtYTAyYy03OGVhNGExZGRhMjUiLCJuYmYiOjE1MjM0MzgzMDAsIm5vbmNlIjoxMjMsInN1YiI6MTIzLCJ0eXAiOiJhY2Nlc3MifQ.UZ6S92h3nAG-GKY_XUE1Rc6uR_BuqR8ufUJfMhhKtNmt7DkkQlU49qPXjL0LFddVz1E2DXi2a-BQ0FG-DHsTHA' (string, required)

## Group Адміністратування

### Legal Entity [/legal_entities]

ESOZ entity id - ENT-005-009-002

#### GET legal entities [GET /api/v2/legal_entities]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

#### GET legal entities by id [GET /api/v2/legal_entities/{id}]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0177|
|Scope|legal_entity:read|
|Auth |так|
|User types|DOCTOR|
|?Confluence spec|link|

+ Parameters
    + `id`

+ Response 200 (application/json)

#### PUT legal entities [PUT /api/v2/legal_entities]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0178|
|Description|text|
|Scope|legal_entity:write|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

#### GET related legal entities [GET /api/legal_entities/{id}/related]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0186|
|Description|text|
|Scope|related_legal_entities:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Parameters
    + `id`
    
+ Response 200 (application/json)


### Legal Entity license [/licenses]
ESOZ entity id - ENT-005-009-003

#### Create license [POST /api/licenses]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-003-0188|
|Description|text|
|Scope|license:write|
|Auth |так|
|User types|?|
|?Confluence spec|link|
    
+ Response 200 (application/json)

### Division [/divisions]
ESOZ entity id - ENT-005-006-001

---

#### GET legal entities [GET /api/v2/legal_entities]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Description|text|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

### Healthcare service [/healthcare_services]
ESOZ entity id - ENT-005-006-001

#### GET legal entities [GET /api/v2/legal_entities]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Description|text|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

## Group Персональні дані пацієнта

### Persons [/Persons]

#### GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

### PREpersons [/PREpersons]

#### GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

### AUTH met [/AUTH]

#### GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

## Group Клінічні дані

## Group Діагностичні дані

## Group Медичні дані

### EDP [/edp]

#### GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

### DRP [/drp]

#### GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

## Group Додаткові сервіси

### adresses [/adresses]

#### PRODenv GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

#### PrePRODenv GET  [GET /1]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

#### DEMOenv GET  [GET /2]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

### dictionaries [/dictionaries]

#### GET  [GET]

|Властивість |Значення |
|------------|---------|
|ESOZ API id|API-005-009-002-0176|
|Scope|legal_entity:read|
|Auth |так|
|User types|?|
|?Confluence spec|link|

+ Response 200 (application/json)

# Data Structures

## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_Collection_V2`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination__V2`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: https://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `6617aeec-15e2-4d6f-b9bd-53559c358f97#17810` (string) - [Request ID](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.
        
### `Response__Error_ValidationFailed_Extended`
+ `error` (object)
    + type: validation_failed (string) - type of an error.
    + message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
    + invalid (array)
        + (object)
            + `entry`: `$.cvv` (string, required) - JSON Path to an invalid property.
            + `entry_type`: `json_data_property` (string, required) - Type of error.
            + `rules` (array)
                + (object)
                    + `description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + params (object) - Validation Parameters.
                        + `values` (array)
                    + `raw_description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + `rule`: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
                            - required
                            - inclusion

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 50 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

### `Response__Pagination__V2`
+ page_number: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 23 (number) - Total number of pages.

## `Access_Tokens`
### `Access_Token`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - OAuth токен доступу
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - Ідентифікатор користувача
+ name: `access_token` (string, required) - Ім'я токена
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - Ідентифікатор токена
+ expires_at: 1498749591 (number, required) - Час, коли токен стає невалідним
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - перелік необхідних доступв через пробіл
    + refresh_token: `my-oauth-refresh-token` (string, required) - Оовлюючий токен
    + redirect_uri: `https://example.com/` (string, required) - URI перенаправлення
    + `grant_type`: `authorization_code`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Ідентифкатор авторизованого користувача

### `Access_Token_1`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - Ідентифікатор користувача
+ name: `change_password_token` (string, required) - Ім'я токена
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - Ідентифікатор токена
+ expires_at: 1498749591 (number, required) - Час, коли токен стає невалідним
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - перелік необхідних доступв через пробіл
    + `grant_type`: `refresh_token`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Ідентифкатор авторизованого користувача

