FORMAT: 1A
HOST: https://api.ehealth.gov.ua

# ESOZ

**Version: 9.11 V3** 2025-02-27

## General Information

Electronic healthcare system of Ukraine (ESOZ) consists of central database and medical information systems (MIS).
Central database belongs to Ukrainian state, represented by the National Healthcare Service of Ukraine (NHSU).

Users of the electronic healthcare system of Ukraine are individuals and
legal entities who are registered in the electronic health system and
have access rights in accordance with the Procedure for the Operation of the electronic healthcare system.

## Abbreviations, acronyms, explanations

See <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17536909481">link to Confluence ESOZ Glossary page</a>.

## Interacting with API

Our API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).
It has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors.
We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients.

### Verbs

As per RESTful design patterns, API implements following HTTP verbs:

- `HEAD` - Can be issued against any resource to get just the HTTP header info.
- `GET` - Read resources. Should hever change resources on server (idempotency) since most of http proxies and services may reply same request multiple times.
- `POST` - Create new resources.
- `PUT` - Replace resources. Idempotent. (Can be used as `insert or update` method, when we want clients to don't care whenever entity is exists in our system.)
- `PATCH` - Same as `PUT`, but replaces subset of fields instead of full entity. Should never be used as `insert of update` pattern.
- `DELETE` - Remove resources.

### Status codes

Code  | Description
----- | -----------
`200` | Everything worked as expected.
`201` | Created.
`202` | Accepted.
`400` | Bad Request. 
`401` | Unauthorized. No valid API key provided or API key doesn't match project.
`402` | The parameters were valid but the request failed.
`403` | Source or destination account is disabled.
`404` | Not Found. The requested resource doesn't exist.
`409` | Logical error. For example, odject in current status can not be modified. 
`415` | Incorrect ```Content-Type``` HTTP header.
`422` | Semantic error or similar. For example, value is not included in enum of allowed values.
`429` | Too Many Requests. Rate limit is exceeded.
`500` `502` `503` `504` | Server Errors. Something went wrong on our end.

### Field naming

Fields are named in `snake_case` since it's more common for
our stack and [20% easier to read](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=&arnumber=5521745).

### Authentication 

In general there is 3-phase authentication routine:

1) Issuing Session Token (OAuth);
2) Issuing Approval Token (ABAC);
3) Issuing Access Token (JWT).

### Request identifier

Each API request has an associated request identifier.
You can find it in `X-Request-ID` response header or inside `meta.request_id` property of returned JSON.

You can also find request identifiers in the URLs of individual request logs in your Dashboard.
If you need to contact us about a specific request, providing the request identifier will
ensure the fastest possible resolution.

All Request ID's are prefixed with a human-readable name of server that served your request.

```
X-Request-ID: flash-99spDSoim3i
```

### Content Type

`Content-Type` header should be always `application/json`

### Request structure

Request consist with a root object that contain resource and metadata as it's childs:

```
{
  "resource": {
    "name": "Alex",
    "surname": "Gray",
    "email": "me@example.com",
    "credentials: [
      {"method": "passsword", "password": "notasecret"}
    ]
  },
  "format_response": true,
  "redirect_browser": true
}
```

### Response structure

Response can consist of 5 root properties:

* `meta` - contains: 1) URL of the requested resource `url`;
                     2) requested response type `type`, may be either list or object;
                     3) HTTP status `code`;
                     4) idempotency key (`idempotency_key`);
                     5) request id (`request_id`).
* `urgent` - Notifications and counters.
* `errors` - Error description. MUST be present when status code is not 2XX, 3XX. CAN NOT be present when data is present.
* `data` - Requested resource. MUST be present when status code is 2XX, 3XX. CAN NOT be present when error is present.
* `paging` - Pagination data.
* `sandbox` - Optional data provided by sandbox environment, for development purposes.

```
{
  "meta": {
    "url": "https://qbill.ly/transactions/",
    "type": "list",
    "code": "200",
    "idempotency_key": "iXXekd88DKqo",
    "request_id": "qudk48fFlaP"
  },
  "urgent": {
    "notifications": ["Read new emails!"],
    "unseen_payments": 10
  },
  "data": {
    "type": "resource_name",
    <...>
  },
  "paging": {
    "limit": 50,
    "cursors": {
      "starting_after": "MTAxNTExOTQ1MjAwNzI5NDE=",
      "ending_before": "NDMyNzQyODI3OTQw"
    },
    "has_more": true
  },
  "sandbox": {
    "debug_varibale": "39384",
    "live": "false"
  }
}
```

### Errors

All errors is returned in JSON format if another `Content-Type` is not specified.
This means that your will receive JSON for requests with HTTP 415 code when incorrect `Content-Type` is provided.

#### Error Object Properties

You can find all necessary information about occurred error in a response `error` property. It can have following fields:

Fields | Required | Description
--------- | ----------- | -----------
`type` | true | General error type. You should return human-readable error message based on this field as a key. Type descriptions is listed in next section.
`invalid` | false | Collection of validation errors for your request.
`invalid[].entry_type` | true | Type of invalid field.
`invalid[].entry` | false | Name or JSON path to invalid data property.
`invalid[].rules` | false| Failed rules for invalid property. You can find supported validation rules at [Request Validators](#request-validators) table. Server may optinally skip this field, when validation rules is perefferd to stay secret or hard to extract from validator.
`invalid[].params` | false| Optional parameters that can be used in a human-readable error message, to make it easier to understand. Usually it contains limit values for failed validator.
`message` | false | Human readable message for API developer.

Example error response:

```
{
    "data": {
        "error": {
            "invalid": [
                {
                    "entry": "$.type",
                    "entry_type": "json_data_property",
                    "rules": [
                        {
                            "description": "Value AMB/ not found in the dictionary eHealth/episode_types",
                            "params": [],
                            "rule": "invalid"
                        }
                    ]
                }
            ],
            "message": "Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors.",
            "type": "validation_failed"
        },
        "eta": "2019-04-23T09:13:02.415",
        "status": "failed",
        "status_code": 422
    },
    "meta": {
        "code": 200,
        "request_id": "806e0f81-ac97-470e-988f-6391e9abf642#28157",
        "type": "object",
        "url": "http://api-medical-events.me.svc.cluster.local/api/jobs/5cbed6e2ed59d30001e54b92"
    }
}
```

#### Error Types

Parameter | Description
--------- | -----------
`access_denied` | Authorization not passed
`forbidden` | User does not have permissions to access the resource
`content_type_invalid` | Invalid HTTP request `content-type`.
`validation_failed` | Failed validation on JSON request body or form data. 
`request_too_large` | Request body was to large to process it.
`request_conflict`| Request causes logical errors
`internal error`| Error on the server

#### Error Entry Types

Entry Type | Description
--------- | -----------
`json_data_proprty` | JSON document is invalid. `entry` will contain JSON Path to invalid property.
`form_data_field` | HTTP request field (for `form-data` requests) is invalid. 
`query_param` | HTTP query parameter is invalid.
`body` | Mailformed request body.
`header` | HTTP request header is invalid.

#### Validation Rules

List of possible validation rules:

Rule | Params | Description
-------------- | ----------- | -----------
`cast` | `[types]` | The field type should be in `types`.
`required` | `[]` | The field is required and should not be `nil`.
`format` | `[patterns]` | The field should match all regular expressions in `patterns` list.
`inclusion` | `[enum]` | Field value should be in `enum`.
`invalid`| `[]` | Field value is not valid according to specification
`exclusion` | `[enum]` | Field value should NOT be in `enum`.
`subset` | `[set]` | Field value should be subset of `set`.
`length` | `{min:_, max:_, is:_, exclusive:true|false}` | List or string length should be equal to `is` value, less than `max` and bigger than `min` value. Params is optional, but one of them should always be present. `exclusive` is false by default.
`number` | `{greater_than:_, less_than:_, greater_than_or_equal_to:_, less_than_or_equal_to:_, multiple_of:_}` | The field value must be a number that is greater than `greater_than` and less than `less_than`.
`confirmation` | `[]` | The field value of field must match confirmed field (eg. `password_confirmation` should match `password`).
`acceptance` | `[]` | The field value should be true.
`email` | `[patterns]` | The field value must be a valid email address respectively to `patterns`.
`phone_number` | `[patterns]` | The field value must be a valid phone number respectively to `patterns`. *Usually it means that is should be in international format (with `+3`).*
`card_number` | `[]` | The field value should be a valid Visa or MasterCard card number. (By luhn algoryghm.)
`metadata` | `[]` | The field must be a [valid metadata object](http://docs.apimanifest.apiary.io/#introduction/optional-features/metadata).
`unique` | `[]` | The field must be a list with all it's items unique.
`schemata` | `[]` | JSON Schema specific error core.
`schema` | `[]` | JSON Schema specific error core.
`dependency` | `[json_paths]` | Property expects another property to exist.
`json` | `[]` | The field under validation must be a valid JSON string.
`authentification_code` | `{resent: true}` | OTP or other authentification code was invalid. User should retry with re-entering it. `resent` property will tel is code was automatically resent upon failed validation.
`date`, `datetime`, `timestamp` | `[after:_, before:_, after_or_at:_, before_or_at:_]` | Invalid datetime representation.
`url` | `[patterns]` | Field should contain a valid URL.

### Pagination

You can use next search parameters to operate pagination:

Arguments:

- `page_number` (optional) - A number of a page in the list;
- `page_size` (optional) -  A limit on the number of objects to be returned, between 1 and 100. Default: 50;

### HTTP Redirects

API uses HTTP redirection where appropriate. Clients should assume that any request may result in a redirection. Receiving an HTTP redirection is not an error and clients should follow that redirect. Redirect responses will have a Location header field which contains the URI of the resource to which the client should repeat the requests.

Status codes:

- `301` - Permanent redirection. The URI you used to make the request has been superseded by the one specified in the Location header field. This and all future requests to this resource should be directed to the new URI.
- `302`, `307` - Temporary redirection. The request should be repeated verbatim to the URI specified in the Location header field but clients should continue to use the original URI for future requests.
- `303` - The request was successfully performed, the result can be found by the redirect URI.
Other redirection status codes may be used in accordance with the HTTP 1.1 spec.

### File Uploads

#### For files less than 10 MB

For small files it's appropriate to send base64 encoded file contents as JSON field:

```
{
    name: "My Name",
    image: "sdasdpjoijhwhwe83280u2380wef=="
}
```

#### For larger files - Multi-Stage Uploads (Network Transactions)

Multi-stage process:

1). User initiates uploading;
2). Server provides the link to media storage;
3). User upload file using provided link.

## Optional Features

### Rate Limits (Throttling)

We throttle our APIs by default to ensure maximum performance for all developers.

Rate limiting of the API is primarily considered on a per-consumer basis.
All your projects share a same rate limit, to avoid API-consuming fraud.
Rate limits depend on your account type.

Currently free accounts is rate limited to 1000 API calls every 15 minutes,
but this value may be adjusted at our discretion.

### Idempotent Requests

From a RESTful service standpoint, for an operation (or service call) to be idempotent,
clients can make that same call repeatedly while producing the same result.
In other words, making multiple identical requests has the same effect as
making a single request. However, if you are working with async methods,
new job will not be created before previous identical request is not performed.

### Ordering Lists and Collections

By default, all collections are ordered in ascending chronological order.

# Group General

## Dictionaries [/gen/dictionaries]

## Addresses [/gen/addresses]

## User Authentication [/gen/userauth]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-068
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17478385835/oAuth">User Authentication</a>

Different environments are using different hosts in endpoints:

Environmnet | Host
------------|-----
DEMO        | https://auth-demo.ehealth.gov.ua
PREPROD     | https://auth-preprod.ehealth.gov.ua
PROD        | https://auth.ehealth.gov.ua

In general 3 stage authentication purpose is to get active JWT Bearer which
can be obtained using the folling example:

```
var user      = __ENV.USER;
var data      = JSON.parse(open("./assets/" + user));
var authorize = JSON.parse(open("./assets/authorize@" + user));
var grant     = JSON.parse(open("./assets/grant@" + user));

export function setupAuth() {

   let res1 = http.post("https://auth-demo.ehealth.gov.ua/auth/login",
       JSON.stringify(data), { headers: { 'Content-Type': 'application/json' } });
       check(res1, { "User is entered: ": r => r.json().meta.code < 300, });

   let res2 = http.post("https://auth-demo.ehealth.gov.ua/oauth/apps/authorize",
       JSON.stringify(authorize), { headers:
          { 'Content-Type': 'application/json',
            'Authorization' : 'Bearer ' + res1.json().data.value } });
       check(res2, { "User is authorized by app: ": r => r.json().meta.code < 300, });

   grant.token.code = res2.json().data ? res2.json().data.value : 'error';
   let res3 = http.post("https://auth-demo.ehealth.gov.ua/oauth/tokens",
       JSON.stringify(grant), { headers:
          { 'Content-Type': 'application/json',
            'Authorization' : 'Bearer ' + res1.json().data.value } });
       check(res3, { "User is granted: ": r => r.json().meta.code < 300, });

   return { data: res3 };
}
```

### Login [PUT /auth/login]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0323
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571446858/Login">Login</a>

Create Session Token by Object.

+ Request (application/json)
    + Attributes (object)
        + token (object)
            + `grant_type`: `password` (string, required) - authentication type
            + `email`: `user@company.com` (string) - email address of ESOZ user
            + `client_id`: `00` (string, required) - MIS identifier
            + `scope`: `app:authorize' (string, required) - ABAС rule

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Sign-in [GET /sign-in{?client_id,redirect_uri,scope,email,user_data,state}]

Key                | Value
-------------------|-----------
ESOZ API ID        | N/A
Link to Confluence | N/A

Create Session Token by Params. You MUST redirect your users to this URL to obtain OAuth
Code Grant (which is later exchanged to Access Token).

User will see rendered login page, which structure differ by a list of requested
scopes and security measures applied by DevOps team.

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
    + `redirect_uri`: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + email: email@example.com
    + `user_data`: `base64_string` - Auth request signed on client side
    + state: `eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9` (string, optional) - Randomly generated, opaque, and non-guessable string generated by client that will be transferred to client with grant code

+ Response 200 (text/html; charset=UTF-8)
    + Headers

### Issuing Approval Token [POST /oauth/apps/authorize]

Key                | Value
-------------------|-----------
ESOZ API ID        | N/A
Link to Confluence | N/A

```
{
    "app": {
        "client_id": "00000000-0000-0000-0000-000000000000",
        "redirect_uri": "https://test.com",
        "scope": "division:read client:read app:read_pis employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read otp:read otp:write person:read patient_summary:read encounter:write encounter:read encounter:cancel episode:write episode:read job:read condition:read condition:write observation:read observation:write immunization:read immunization:write allergy_intolerance:read allergy_intolerance:write medication_statement:read medication_statement:write device:read device:write risk_assessment:read risk_assessment:write medication_dispense:read drugs:read medication_request:details medication_request:read medication_request:reject medication_request:resend medication_request_request:read medication_request_request:reject medication_request_request:sign medication_request_request:write diagnostic_report:read diagnostic_report:write diagnostic_report:cancel procedure:read procedure:write procedure:cancel service_request:makeinprogress service_request:complete service_request:recall service_request:cancel service_request:write service_request:read service_request:use approval:create program_service:read medication_administration:read medication_administration:write healthcare_service:read employee_role:read person_request:write person_request:read preperson:read preperson:write authentication_method_request:write merge_request:write merge_request:sign merge_request:read composition:create composition:search composition:read composition:sign composition:cancel care_plan:write care_plan:read approval:read approval:cancel license:read clinical_impression:read rule_engine_rule:read medical_event_context:read clinical_impression:write person_verification:details person_verification:write person_emergency_contact:read device_definitions:read device_request:write device_request:read device_request:resend device_request:revoke specimen:write specimen:read specimen:reject"
    }
}
```

+ Request (application/json)
    + Headers
        Authorization: Bearer 432fsdfg543252345tfgdsgdft2345 - access_token with the `app:authorize` scope
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes
        + app (required)
            + client_id: `client-1380df72-275a-11e7-93ae-92361f002671` (string, required) - ID of client that is granted with access to user's resources.
            + scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes that are granted to the client on the user's behalf.
            + `redirect_uri`: `http://example.com/my_success_login_page` (string, required) - URL of client where user will be redirected on Approval creation.

+ Response 201 (application/json)
    + Headers
        Location: http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (`Response_OK`)
        + urgent
            + `redirect_uri`: `http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09`

### Issuing Grant Access Token [POST /oauth/tokens]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0324
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571807257/Exchange+oAuth+Code+Grant+to+Access+Token">Issuing Grant Access Token</a>

```
{
    "token": {
        "grant_type": "authorization_code",
        "code": "00000000000000000000000000000000",
        "client_id": "00000000-0000-0000-0000-000000000000",
        "scope": "division:read employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read division:activate division:deactivate division:details division:read division:write employee:deactivate employee:details employee:read employee:write employee_request:approve employee_request:read employee_request:reject employee_request:write legal_entity:read healthcare_service:read healthcare_service:write employee_role:read employee_role:write"
    }
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Reissuing Session Token [POST /oauth/tokens]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0325
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571315778/Use+Refresh+Token+for+Access+Token+extension">Reissuing Session Token</a>

```
{
    "token": {
        "grant_type": "refresh_token",
        "code": "00000000000000000000000000000000",
        "client_secret": "...",
        "client_id": "00000000-0000-0000-0000-000000000000",
        "scope": "division:read employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read division:activate division:deactivate division:details division:read division:write employee:deactivate employee:details employee:read employee:write employee_request:approve employee_request:read employee_request:reject employee_request:write legal_entity:read healthcare_service:read healthcare_service:write employee_role:read employee_role:write"
    }
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Logout [POST /auth/logout]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0326
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18448646240/DRAFT+PIS.+Logout">Logout</a>


+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

### Issuing Nonce Token [POST /oauth/nonce]

Key                | Value
-------------------|-----------
ESOZ API ID        | N/A
Link to Confluence | N/A

This access point allows you to get a nonce (one-time JWT) for an
active client of the system. The `client_secret` field must be passed if the
`client type` = TRUSTED_PIS. An example of an encoded JWT information message in the token field:

```
{
   "aud": "mithril-login",
   "exp": 1523439201,
   "iat": 1523438301,
   "iss": "EHealth",
   "jti": "efe1f08e-d4b4-4cef-a02c-78ea4a1dda25",
   "nbf": 1523438300,
   "nonce": 123,
   "sub": 123,
   "typ": "доступ"
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `client_id`: `30074b6e-fbab-4dc1-9d37-88c21dab1847` (string, required)
        + `client_secret`: `c2778f3064753ea70de870a53795f5c9` (string, optional)


+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
           + token: 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJtaXRocmlsLWxvZ2luIiwiZXhwIjoxNTIzNDM5MjAxLCJpYXQiOjE1MjM0MzgzMDEsImlzcyI6IkVIZWFsdGgiLCJqdGkiOiJlZmUxZjA4ZS1kNGI0LTRjZWYtYTAyYy03OGVhNGExZGRhMjUiLCJuYmYiOjE1MjM0MzgzMDAsIm5vbmNlIjoxMjMsInN1YiI6MTIzLCJ0eXAiOiJhY2Nlc3MifQ.UZ6S92h3nAG-GKY_XUE1Rc6uR_BuqR8ufUJfMhhKtNmt7DkkQlU49qPXjL0LFddVz1E2DXi2a-BQ0FG-DHsTHA' (string, required)

# Group Administration

## Divisions [/admin/divisions]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-022
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17358684238/Division+ENT">Division</a>

### Get Divisions [GET /api/divisions]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-006-001-0087
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570889841/DRAFT+Get+divisions">Get Divisions</a>

+ Parameters
    + ids: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + name: `Бориспільське відділення клініки` (string, optional)
    + legal_entity_id: `d8b5f374-0f3c-46e6-baf1-21d97b4c9ff5` (string, optional)
    + type: CLINIC (string, optional) - Dictionary DIVISION_TYPE
    + status: ACTIVE (string, optional)
        - ACTIVE
        - INACTIVE
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (`crud_division_get`)

### Update Division [PATCH /api/divisions/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-006-001-0088
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570136296/DRAFT+Update+division">Update Division</a>

This method must be used to update existing division in the system.
Note that different legal entity types can register specific division types and address types accordingly
More details can be found [here](https://e-health-ua.atlassian.net/wiki/x/GQB7Iw).

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Attributes (`crud_division_post`)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

### Create Division [POST /api/divisions]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-006-001-0089
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570431096/DRAFT+Create+division">Create Division</a>

This method must be used to create new division in the system.
Note that different legal entity types can register specific division types and address types accordingly.
More details can be found [here](https://e-health-ua.atlassian.net/wiki/x/GQB7Iw).

+ Request (application/json)
    + Attributes (`crud_division_post`)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

### Deactivate Division [PATCH /api/divisions/{id}/actions/deactivate]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-006-001-0090
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570922579/DRAFT+Deactivate+division">Deactivate Division</a>

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

### Activate Division [PATCH /api/divisions/{id}/actions/activate]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-006-001-0091
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570693263/DRAFT+Activate+division">Activate Division</a>

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

## Legal Entities [/admin/legal_entities]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-035
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17359405133/Legal+Entity">Legal Entity</a>

### Get Legal Entities [GET /api/v2/legal_entities{?edrpou,legal_entity_id,settlement_id,type,status,nhs_verified,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0176
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570824360/DRAFT+Get+Legal+Entities+V2">Get Legal Entities</a>

Use this method to get list of legal entities filtering by parameters.
List consists of legal entities with parameter `is_active = true`.

+ Parameters
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + settlement_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + type: MSP (enum, optional)
        - MSP
        + Default: MSP
    + status: ACTIVE (enum, optional)
        - ACTIVE
        - CLOSED
    + `nhs_verified`: false (boolean, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
                + include (`Legal_Entity_Response_Public_V2`)
                + status: ACTIVE (enum, required)
                    - ACTIVE
                    - CLOSED
                    - SUSPENDED

### Get Legal Entity by Id [GET /api/v2/legal_entities/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0177
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570562268/DRAFT+Get+Legal+Entity+by+ID+V2">Get Legal Entity by Id</a>

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri

### Create or Update Legal Entity [PUT /api/v2/legal_entities]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0178
Scope              | legal_entity:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570857172/DRAFT+Create+Update+Legal+Entity+V2">Create or Update Legal Entity</a>

Key features and main differences from V1:

* legal entity types and licenses are created/updated one by one, i.e. one legal entity type and one license are accepted in one call;
* medical_services_providers structure is removed, accreditation and license parameters are moved to the root;
* added EDR integration in order to validate and enrich legal entity data;
* it can be also used to update owner data. In this case `employee_id` should be passed in the payload in the owner block.

User may accept or decline Invitation.
For changes to take effect employee must confirm the changes.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + include (`Legal_Entity_Request_Public_V2`)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Verify Legal Entity by NHS [PATCH /api/legal_entities/{id}/actions/nhs_verify]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0179
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570464009/DRAFT+Verify+Legal+Entity+by+NHS">Verify Legal Entity by NHS</a>

Use this method to verify legal entity by NHS.
Available transition: `nhs_verified` false --> true.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`

### Deactivate Legal Entity [PATCH /api/legal_entities/{id}/actions/deactivate]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0180
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570824371/DRAFT+Deactivate+Legal+Entity">Deactivate Legal Entity</a>

Use this method to deactivate MSP:
1). Deactivate emploees by legal entity.
2). Deactivate legal entity Update status on CLOSED.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`

+ Response 200 (application/json)

### Get Related Legal Entities [GET /api/legal_entities/{id}/related]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0186
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570922693/DRAFT+Get+legators+Legal+Entities">Get Legators Legal Entities</a>

Use this method to get the list of child legal entities which are related to current legal entity.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Legal_Entity_Related`])

### Licenses [/admin/licenses]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-036
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17358946428/License">License</a>

### Get Licenses [GET /api/licenses{?id,license_number,type,is_primary,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-003-0187
Scope              | license:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570824387/DRAFT+Get+licenses">Get Licenses</a>

Use this end-point to obtain all Licenses of the legal entity.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + license_number: `fd12344344` (string, optional)
    + type: MSP (string, optional) - Dictionary LICENSE_TYPE
    + is_primary: true (boolean, optional) - primary or additional license flag
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`crud_licenses_get`])

+ Response 200 (application/json)

### Create License [POST /api/licenses]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-003-0188
Scope              | license:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570758930/DRAFT+Create+license">Create License</a>

This method must be used to create additional licenses for legal entity (`is_primary=false`) in the system.
Primary license must be added with `Create or Update Legal Entity` method.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (`crud_licenses_post`)
        + `is_primary`: false (boolean, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_licenses_get`)

+ Response 200 (application/json)

### Update License [PATCH /api/licenses]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-003-0188
Scope              | license:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570136425/DRAFT+Update+license">Update License</a>

This method must be used to update additional license (`is_primary=false`) for legal entity in the system.
Primary license must be updated with `Create or Update Legal Entity` method.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (`crud_licenses_post`)
        + is_primary: false (boolean, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_licenses_get`)

# Group Personal

## Persons [/personal/persons]

### Get Person [GET]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | 

+ Response 200 (application/json)

## Prepersons [/personal/prepersons]

### Get Preperson  [GET]

Key                | Value
-------------------|-----------
ESOZ API ID        | 
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | 

+ Response 200 (application/json)


# Group Medical Events

Medical events API is a set of web services designed to provide methods of communication
between ESOZ Medical Data Storage and medical information systems (MIS). Medical events
API is based on the international framework for exchanging digital health
records - FHIR Release 3 (STU). Most of major resources, data types, data
structures and their way of interpretation are inherited from FHIR. However,
there are minor сhanges described in Apiary. To find out more about business
logic behind the API read this.


## Medication Request [/me/medication_request]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-043
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17359110269/Medication+Request">Medication Request</a>

### Qualify Medication Request by Id [POST /api/medication_requests/{id}/actions/qualify]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0145
Scope              | medication_request:details
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570693366/REST+API+Qualify+Medication+Request+by+ID">Qualify Medication Request by Id</a>

This method is used to qualify (possibility to use Innm for the program) Medication request by Id.
Fields descriptions are listed in request Example view.

+ Parameters
    + id: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Medication request identifier`

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `division_id`: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Division identifier`
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        +  data (array[`Qualify_by_ID_Request_for_Medication_request_Responce`])

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create medication request!` (string, required)

### Get Medication Requests by Search Params [GET /api/persons/{person_id}/medication_requests{?legal_entity_id,employee_id,status,request_number,created_from,created_to,medication_id,intent,care_plan_id,encounter_id,episode_id,page,page_size,medical_program_id,started_at_from,started_at_to,ended_at_from,ended_at_to,dispense_valid_from_start,dispense_valid_from_end,dispense_valid_to_start,dispense_valid_to_end}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0146
Scope              | medication_request:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570758862/REST+API+Get+medication+requests+by+search+params">Get Medication Requests by Search Params</a>

Use this method to obtain list of Medication Requests. 
Use [**Get medication requests details**](https://esoz.docs.apiary.io/#reference/medical-events/medication-request/get-medication-requests-details)
to get Medication Request by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + `episode_id`: `6f305d0e-1758-4920-9167-d4f97225ad7e` (string, optional) - Unique episode identifier, look into episode in encounter.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    + `medical_program_id`: `9a2fc263-6029-4b2b-b40a-66f4435509b7` (string, optional) - Internal medical program ID, a UUID string.
    + `started_at_from`: `2017-08-16` (string, optional) - Start date of the period of treatment initiation period. Format DATE '2017-08-16'.
    + `ended_at_from`: `2017-09-16` (string, optional) - End date of the period of treatment initiation period. Format DATE '2017-09-16'.
    + `started_at_to`: `2017-08-20` (string, optional) - Start date of the period of treatment ending period. Format DATE '2017-08-20'.
    + `ended_at_to`: `2017-09-20` (string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'.
    + `dispense_valid_from_start`: `2017-02-17` (string, optional) - Start date of the period of dispense issue date. Format DATE '2017-02-17'.
    + `dispense_valid_from_end`: `2017-02-19` (string, optional) - End date of the period of dispense issue date. Format DATE '2017-02-19'.
    + `dispense_valid_to_start`: `2017-03-26` (string, optional) - Start date of the period of dispense expiry date. Format DATE '2017-03-26'.
    + `dispense_valid_to_end`: `2017-03-30` (string, optional) - End date of the period of dispense expiry date. Format DATE '2017-03-30'.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_request_Public_Response_with_Medical_Program_min`

### Get Medication Requests in Care Plan Context [GET /api/care_plans/{care_plan_id}/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,intent,encounter_id,page,page_size,medical_program_id,started_at_from,started_at_to,ended_at_from,ended_at_to,dispense_valid_from_start,dispense_valid_from_end,dispense_valid_to_start,dispense_valid_to_end}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0147
Scope              | medication_request:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570562223/REST+API+Get+Medication+requests+in+care+plan+context">Get Medication Requests in Care Plan Context</a>

The method returns a list of medication requests in the context of a care plan. 
User must have an approval on the care plan from url.

Use [**Get medication requests details**](https://esoz.docs.apiary.io/#reference/medical-events/medication-request/get-medication-requests-details) to get Medication Request by ID.

+ Parameters
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a patient.
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    + `medical_program_id`: `9a2fc263-6029-4b2b-b40a-66f4435509b7` (string, optional) - Internal medical program ID, a UUID string.
    + `started_at_from`: `2017-08-16` (string, optional) - Start date of the period of treatment initiation period. Format DATE '2017-08-16'.
    + `ended_at_from`: `2017-09-16` (string, optional) - End date of the period of treatment initiation period. Format DATE '2017-09-16'.
    + `started_at_to`: `2017-08-20` (string, optional) - Start date of the period of treatment ending period. Format DATE '2017-08-20'.
    + `ended_at_to`: `2017-09-20` (string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'.
    + `dispense_valid_from_start`: `2017-02-17` (string, optional) - Start date of the period of dispense issue date. Format DATE '2017-02-17'.
    + `dispense_valid_from_end`: `2017-02-19` (string, optional) - End date of the period of dispense issue date. Format DATE '2017-02-19'.
    + `dispense_valid_to_start`: `2017-03-26` (string, optional) - Start date of the period of dispense expiry date. Format DATE '2017-03-26'.
    + `dispense_valid_to_end`: `2017-03-30` (string, optional) - End date of the period of dispense expiry date. Format DATE '2017-03-30'.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Public_Response_with_Medical_Program_min`])

### Get Medication Requests Details [GET /api/persons/{person_id}/medication_requests/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0148
Scope              | medication_request:details
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570103587/REST+API+Get+medication+requests+details">Get Medication Requests Details</a>

Use this method to obtain Medication Request by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense

### Resend Medication Request [PATCH /api/medication_requests/{id}/actions/resend]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0150
Scope              | medication_request:resend
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570595000/REST+API+Resend+Medication+Request">Resend Medication Request</a>

Use this method to resend SMS to person with medication request number & verification code.
This could be done only for medication request with type **order**.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response_with_Medical_Program_min`)

### Get Medication Request Printout Form [GET /api/persons/{person_id}/medication_requests/{id}/printout_form]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0151
Scope              | medication_request:details
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570398347/REST+API+Get+Medication+Request+Printout+Form">Get Medication Request Printout Form</a>

This method is designed to get printout form (content) by medication request id.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - medication request identifier.

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - medication request identifier
            + `printout_form`: `Medication request content` (string, required) - HTML document for medication request

### Get Medication Request by Id by Pharmacy User [GET /api/pharmacy/medication_requests/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0152
Scope              | medication_request:details_pharm
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570758890/REST+API+Get+Medication+Request+by+ID+by+Pharmacy+User">Get Medication Request by Id for Pharmacy User</a>

Use this method by pharmacy user to obtain short Medication Request by ID or request_number.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense

### Get Medication Request by Id [GET /api/medication_requests/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0155
Scope              | medication_request:details
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570365627/DRAFT+REST+API+Get+Medication+request+by+ID">Get Medication Request by Id</a>

Use this method to obtain Medication request by ID.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense


### Block Medication Request [PATCH /api/medication_requests/{id}/actions/block]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0156
Scope              | medication_request:block
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570463996/REST+API+Block+Medication+Request">Block Medication Request</a>

Use this method to block Medication request for dispense.
In order to block medication request `block_reason` and `block_reason_code` should be added in request.
This method can't be used by employees with type 'PHARMACIST'.
For pharmacists please use [**Block Medication Request by Pharmacy User**](https://esoz.docs.apiary.io/#reference/medical-events/medication-request/block-medication-request-by-pharmacy-user).

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Headers
       Authorization: Bearer c2778f3064753ea70de870a53795f5c9
       X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
       + `block_reason`: `перевищено норми відпуску` (string, optional) - Block reason
       + `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_block_reason_required`

### Unblock Medication Request [PATCH /api/medication_requests/{id}/actions/unblock]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0157
Scope              | medication_request:unblock
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570660598/DRAFT+REST+API+Unblock+Medication+Request">Unblock Medication Request</a>

Use this method to unblock previously blocked Medication Request for Dispense.
In order to unblock medication request `block_reason` and `block_reason_code` should be added in request.

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Headers
       Authorization: Bearer c2778f3064753ea70de870a53795f5c9
       X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
       + `block_reason`: `помилки відсутні` (string, optional) - Unblock reason
       + `block_reason_code`: `UNBLOCK_DEFAULT` (string, required) - Unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`       

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_block_reason_required`

### Block Medication Request by Pharmacy User [PATCH /api/pharmacy/medication_requests/{id}/actions/block]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-002-0158
Scope              | medication_request:block_pharm
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570758901/REST+API+PRIVATE+SPACE+AR+Private.+Get+Medication+request+by+ID">Private Get Medication Request by Id</a>

Use this method to block Medication request for dispense. In order to block medication request `block_reason_code` and `block_reason`(optional) should be added in request.

This method must be used only by employees with type 'PHARMACIST'.

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Headers
       Authorization: Bearer c2778f3064753ea70de870a53795f5c9
       X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
       + `block_reason`: `перевищено норми відпуску` (string, optional) - Block reason
       + `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
       + `blocked_to`: `2018-08-02T10:45:16.000Z` (string, optional) - Block expiration date

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`)

### Reject Medication Request [PATCH /api/medication_requests/{id}/actions/reject]

Key                | Value
-------------------|-----------
ESOZ API ID        | ?
Scope              | medication_request:unblock_pharm
Auth               | yes
Link to Confluence | <a href=""></a>

Use this method to reject previously created and signed Medication request.
Invoke `Get Medication Request by Id` to obtain previously created medication request.
In order to reject medication request `reject_reason_code` and `reject_reason` (`optional`) should be added.
**Note!** that medication request with intent *plan* and *order* has different structure.

* Medical program is required for *order*.
* Medical program is absent in *plan*.

Look at [**Dummy Reject Medication Request**](https://esoz.docs.apiary.io/#reference/medical-events/medication-request/dummy-reject-medication-request) for more details.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `signed_medication_reject`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_reject_Public_Response_with_Medical_Program_min`
            + `rejected_at`: `2017-04-20T19:14:13Z` (string, required, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
            + `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required, nullable) - Rejected user identifier
            + `reject_reason`: `Помилка призначення. Несумісні препарати.` (string, optional, nullable) - Medication request reject reason
            + `reject_reason_code`: `INCORRECT_DOSAGE` (string, required, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`

### Reject Medication Request by Pharmacy User [PATCH /api/pharmacy/medication_requests/{id}/actions/reject]

Key                | Value
-------------------|-----------
ESOZ API ID        | ?
Scope              | medication_request:reject_pharm
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18757419067/REST+API+Reject+Medication+request+by+Pharmacy+User">Reject Medication Request by Pharmacy User</a>

Use this method to reject existing active Medication request.
Invoke Get Medication Request by ID by Pharmacy User to obtain previously created medication request.
In order to reject medication request `reject_reason_code` and `reject_reason` (`optional`) should be added.
**Note!** that medication request with intent *plan* and *order* has different structure.

* Medical program is required for *order*.
* Medical program is absent in *plan*.

Look at [**Dummy Reject Medication Request by Pharmacy User**](https://esoz.docs.apiary.io/#reference/medical-events/medication-request/dummy-reject-medication-request-by-pharmacy-user) for more details.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `signed_medication_reject`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`
            + `rejected_at`: `2017-04-20T19:14:13Z` (string, required, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
            + `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required, nullable) - Rejected user identifier
            + `reject_reason`: `Помилка призначення. Несумісні препарати.` (string, optional, nullable) - Medication request reject reason
            + `reject_reason_code`: `INCORRECT_DOSAGE` (string, required, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`

### Private Get Medication Request by Id [GET /api/admin/medication_requests/48416485-cc98-46c4-8bba-e321de9e1ecd]

Key                | Value
-------------------|-----------
ESOZ API ID        | ?
Scope              | medication_request_admin:details
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570758901/REST+API+PRIVATE+SPACE+AR+Private.+Get+Medication+request+by+ID">Private Get Medication Request by Id</a>

### Private Get Medication Request [GET /api/admin/medication_requests/48416485-cc98-46c4-8bba-e321de9e1ecd]

Key                | Value
-------------------|-----------
ESOZ API ID        | ?
Scope              | medication_request:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18768265379/REST+API+PRIVATE+SPACE+Private.+Get+Medication+request">Private Get Medication Request</a>

### Dummy Reject Medication Request [PATCH /dummy/medication_requests/{id}/actions/reject]

+ Parameters
   + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        api-key: uXhEczJ56adsfh3Ri9SUkc4en
        msp_drfo: 2534157686
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (`Medication_request_Reject`, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Reject_Response`

### Dummy Reject Medication Request by Pharmacy User [PATCH /dummy/pharmacy/medication_requests/{id}/actions/reject]

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        api-key: uXhEczJ56adsfh3Ri9SUkc4en
        msp_drfo: 2534157686
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (`Medication_request_Reject`, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`

## Medication Dispense [/me/medication_dispense]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-042
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17359241296/Medication+Dispense">Medication Dispense</a>

Medication Dispense - Indicates that a medication product has been dispensed for
a named person/patientDispense of medication is possible only under Medication
Request and during the period specified in Medication RequestMedical program - mandatory
attribute for the first phase. There is no options to dispense medication without
program Dispense details - several medications of different manufacturers
with the same innm can be dispensed at a time. Total of `medication_qty` should
be less or equal to medication quantity specified in Medication Request.

### Search Medication Dispenses by Medication Request Id [GET /api/persons/{person_id}/medication_requests/{id}/medication_dispenses{?status}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0128
Scope              | medication_dispense:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570627767/REST+API+Search+Medication+dispenses+by+Medication+request+ID">Search Medication Dispenses by Medication Request Id</a>

Use this method to obtain list of Medication Dispenses by doctor with medication request ID.
Only Medication dispenses linked to medication request id will be shown. If you want to reduce amount of data that is going trough your application, use `status` filter and show only dispenses that Doctor is interested in.
Use [**Get Medication dispense details in person context**](https://esoz.docs.apiary.io/#reference/medical-events/medication-dispense/get-medication-dispense-details-in-person-context) to get Medication Dispense by Id.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)
    + status: PROCESSED (string, optional) - Status
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
                + `medication_request` (object, required) - Medication request
                    + include `Medication_request_Public_Response`
                + `dispensed_at`: `2017-08-17` (string, required) - date of dispense
                + `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
                + `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
                + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
                + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### Get Medication Dispense Details in Person Context [GET /api/persons/{person_id}/medication_dispenses/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0129
Scope              | medication_dispense:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570103547/REST+API+Get+Medication+dispense+details+in+person+context">Get Medication Dispense Details in Person Context</a>

This method allows to get short information of the Medication Dispense for the MSP (i.o. PRIMARY_CARE, OUTPATIENT) users.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Details_Response_for_MSP`

### Create Medication Dispense by Pharmacy User [POST /api/pharmacy/medication_dispenses{?code}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0131
Scope              | medication_dispense:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570463962/REST+API+Create+Medication+Dispense+by+Pharmacy+User">Create Medication Dispense by Pharmacy User</a>

This method is used to dispense medications to patient.
Full list of all validations can be found [here](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/17080647770/Create+Medication+Dispense+by+Pharmacy+User).
If medical program has setting with parameter `skip_medication_dispense_sign` = true then  fields `payment_amount (optional, if medical program has funding sourse != NHS)` and `payment_id (optional)` should be submitted. In this case process of medication dispense will be performed on create (w/o using digital sign).
If medical program has funding sourse NHS, fields `sell_amount`, `sell_price`, `payment_amount`, `discount_amount` must be submitted.

**Important** In case medications are dispensed to patient under specific
medical program, program participant id must be provided also.

+ Parameters
    + `code`: `3114` (string, optional)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + medication_dispense (object)
            + include `Medication_Dispense_Request`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Medication_Dispense_Response_for_Pharmacist`)

+ Response 409 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 409 (number)
        + error (Response__Error)
            + message: `Invalid division dls status` (string)
            + type: `request_conflict` (string)

### Process Medication Dispense by Pharmacy User [PATCH /api/pharmacy/medication_dispenses/{id}/actions/process]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0133
Scope              | medication_dispense:process
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570332866/REST+API+Process+Medication+Dispense+by+Pharmacy+User">Process Medication Dispense by Pharmacy User</a>

This method is used to process created dispense

Invoke Get Medication dispense details by Pharmacy User to obtain previously created medication dispense.
In order to process dispense `payment_id (optional)` and `payment_amount (optional, if medical program
has funding sourse != NHS)` should be added.

Look at [**Dummy Process Medication Dispense by Pharmacy User**](https://esoz.docs.apiary.io/#reference/medical-events/medication-dispense/dummy-process-medication-dispense-by-pharmacy-user) for more details.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `signed_medication_dispense`: `` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`

### Reject Medication Dispense by Pharmacy User [PATCH /api/pharmacy/medication_dispenses/{id}/actions/reject]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0135
Scope              | medication_dispense:reject
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570922654/REST+API+Reject+Medication+Dispense+by+Pharmacy+User">Reject Medication Dispense by Pharmacy User</a>

This method is used to reject medication dispense.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`

### Get Medication dispenses by search params by Pharmacy User [GET /api/pharmacy/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,care_plan_id,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0138
Scope              | medication_dispense:read_pharm
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570103570/REST+API+Get+Medication+dispenses+by+search+params+by+Pharmacy+User">Get Medication dispenses by search params by Pharmacy User</a>

This method intended to get all Medication dispenses for the PHARMACY users.
Use [**Get Medication Dispense by Pharmacy User**](https://esoz.docs.apiary.io/#reference/medical-events/medication-dispense/get-medication-dispense-details-by-pharmacy-user) to get Medication Dispense by ID.

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: `2017-09-01` (string, optional) - date of dispense
    + dispensed_to: `2017-10-01` (string, optional) - date of dispense
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response_for_Pharmacist`


### Get Medication Dispense Details by Pharmacy User [GET /api/pharmacy/medication_dispenses/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0138
Scope              | medication_dispense:read_pharm
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570693355/REST+API+Get+Medication+dispense+details+by+Pharmacy+User">Get Medication Dispense Details by Pharmacy User</a>

This method allows to get detailed information of the Medication dispense for the PHARMACY users.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`

### Get Medication Dispense by Id [GET /api/cabinet/medication_dispenses/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0139
Scope              | medication_dispense:read_pharm
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18546196640/REST+API+Get+Medication+Dispense+by+ID">Get Medication Dispense by Id</a>

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_without_2d_codes`

### Private Get Medication Dispense List [GET /api/admin/medication_dispenseses]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0141
Scope              | medication_dispense_admin:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18767708182/REST+API+Private.+Get+Medication+Dispense+List">Get Medication Dispense List</a>

### Private Get Medication Dispense by Id [GET /api/admin/medication_dispenseses/id]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-008-001-0142
Scope              | medication_dispense_admin:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18767382709/REST+API+Private.+Get+Medication+Dispense+by+ID">Get Medication Dispense by Id</a>

### Dummy Process Medication Dispense [PATCH /dummy/medication_dispenses/{id}/actions/process]

+ Parameters
   + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        api-key: uXhEczJ56adsfh3Ri9SUkc4en
        msp_drfo: 2534157686
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object, required)
        + include `Medication_Dispense_Process_Request`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response`
            + status: PROCESSED

### Dummy Process Medication Dispense by Pharmacy User [PATCH /dummy/pharmacy/medication_dispenses/{id}/actions/process]

+ Parameters
   + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        api-key: uXhEczJ56adsfh3Ri9SUkc4en
        msp_drfo: 2534157686
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object, required)
        + include `Medication_Dispense_Process_Request_for_Pharmacist`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`
            + status: PROCESSED

## Episode of Care [/me/episode]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-027
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17479434316/Episode">Eposide of Care</a>

Episode of care is a resource that contains general information about a patient`s medical case, such as care manager and diagnoses history.

### Create Episode [POST /api/patients/{id}/episodes]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-0267
Scope              | episode:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571905741/DRAFT+REST+API+Create+Episode">Create Episode</a>

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + include `Episode_Of_Care_Request`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Episodes by Search Params [GET /api/patients/{patient_id}/episodes{?period_from,period_to,status,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-0268
Scope              | episode:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571610885/DRAFT+REST+API+Get+Episodes+by+search+params">Get Episodes by Search Params</a>


Use period_from period_to to find episodes that were active in a certain period of time

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `period_from`: `2017-01-01` (string, optional)
    + `period_to`: `2018-01-01` (string, optional)
    + `code`: `R80` (string, optional)
    + `status`: `active` (string, optional)
    + `managing_organization_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)    
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Response`])

### Get Episode by Id [GET /api/patients/{patient_id}/episodes/{episode_id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-0269
Scope              | episode:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571610896/DRAFT+REST+API+Get+Episode+by+id">Get Episode by Id</a>

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Episode identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data(`Episode_Of_Care_Response`)

### Get Approved Episodes [GET /api/patients/{patient_id}/episodes/approved]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-270
Scope              | episode:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571873026/DRAFT+REST+API+Get+Approved+Episodes">Get Approved Episodes</a>

This web service returns episodes, that patient gave approvals to read by a current employee.
**Scopes required:** `episode:read`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code` : `R80` (string, optional) - current diagnosis code

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Response`])

### Update Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-271
Scope              | episode:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571873037/DRAFT+REST+API+Update+Episode">Update Episode</a>

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request Package (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + include `Update_Episode`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Close Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/close]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-272
Scope              | episode:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571873054/DRAFT+REST+API+Close+Episode">Close Episode</a>

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + include `Close_Episode`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Cancel Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/cancel]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-273
Scope              | episode:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570759203/DRAFT+REST+API+Cancel+Episode">Cancel Episode</a>

+ Request  (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + include `Cancel_Episode`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Encounters in Episode Context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters{?date_from,date_to,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-004-004-0258
Scope              | episode:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18022334586/DRAFT+REST+API+Get+Encounter+context">Get Encounters in Episode Context</a>

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `incoming_referral`: `f10aeafb-0df2-4091-bc83-f07e92a100ae` (string, optional)
    + `period_start_from`: `2000-01-01`(string, optional) - Start date of the period of encounter initiation period. Format DATE '2017-08-16'. Example: 2017-08-16
    + `period_start_to`: `2000-01-10`(string, optional) - End date of the period of encounter initiation period. Format DATE '2017-09-16'. Example: 2017-09-16.
    + `period_end_from`: `2000-01-05`(string, optional) - Start date of the period of encounter ending period. Format DATE '2017-08-20'. Example: 2017-08-20.
    + `period_end_to`: `2000-01-15`(string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'. Example: 2017-09-20.
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `origin_episode_id`: `d11aeafb-0df2-4091-bc83-f07e92a100af` (string, optional)

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`], fixed-type)

### Get Short Episodes by Diagnoses Groups [GET /api/patients/{patient_id}/diagnoses_groups/episodes{?period_from,period_to,diagnoses_group_id,managing_organization_id,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-006-001-0274
Scope              | episode:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18023055421/DRAFT+REST+API+Get+Short+Episodes+by+Diagnoses+Groups">Get Short Episodes by Diagnoses Groups</a>

This web service returns brief information of episodes grouped by Groups of Diagnoses, for which patient gave approvals to read by a current employee.
Access to full episode data is restricted by patient's approval.
If you have an approval - you can obtain episode details and nested entities through `/episode/:id/*` web services.

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `period_from`: `2022-01-01` (string, optional)
    + `period_to`: `2023-01-01` (string, optional)
    + `diagnoses_group_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)
    + `managing_organization_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Short_With_Diagnoses`])

## Compositions [/me/compositions]

### Create Composition Title [GET /api/patients/{patient_id}/composition_title]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

### Submit Composition [GET /api/patients/{patient_id}/compositions]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

### Get Medication Request From Composition [GET /api/persons/{person_id}/compositions/{composition_id}/medication_requests/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

## Specimen [/me/specimen]

Key                | Value
-------------------|-----------
ESOZ ENT ID        | ENT-063
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18697617465/Specimen">Specimen</a>

### Create Specimen [POST /api/patients/{patient_id}/specimens]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0493
Scope              | specimen:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18679365633/DRAFT+REST+API+Create+Specimen">Create Specimen</a>

This endpoint allows to register Specimen by its own.
Also Specimen can be registered as a part of Encounter Data Package.
The required scope is `specimen:write`.
The `signed_data` attribute is the only required.
The structure of PKCS-7 payload of `signed_data` attribute is described in Specimen Payload section.

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Create Specimen [POST /api/patients/{patient_id}/specimens/payload]

This chapter describes the structure of a single Specimen creation. This is not an actual web-service.

+ Request (application/json)
    + Headers
        api-key: aFBLVTZ6Z2dON1V
        Authorization: Bearer mF_9.B5f-4.1JqM
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (`Specimen_Request`)

### Get Specimen by Search Params [GET /api/patients/{patient_id}/specimens{?type,status,registered_by,collected_from,collected_to,container_identifier,container_type,parent,request,encounter,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0495
Scope              | specimen:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680283137/DRAFT+REST+API+Get+Specimen+by+search+params">Get Specimen by Search Params</a>

+ Parameters
    + status: available (string, optional) - status of the Specimen
    + type: ABP (string, optional) - kind of material that forms the Specimen
    + `registered_by`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - identifier of employee who registered the specimen
    + `collected_from`: `2023-12-25` (string, optional) - the date from which the Specimen was collected
    + `collected_to`: `2023-12-28` (string, optional)  - the date to which the Specimen was collected
    + `container_identifier`: `1-ABC-4311` (string, optional) - identifier of the container in the Specimen
    + `container_type`: tube (string, optional) - type of the container in the Specimen
    + parent: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) - parent Specimen 
    + request: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - service request identifier linked to the Specimen
    + encounter: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter/context identifier linked to the Specimen
    + page: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Specimen_Response`])

### Get Specimen Details [GET /api/patients/{patient_id}/specimens/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0495
Scope              | specimen:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680381441/DRAFT+REST+API+Get+Specimen+details">Get Specimen Details</a>

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique specimen identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Specimen_Response`)

### Get Specimen by Accession Identifier [GET /api/specimens/{accession_identifier}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0496
Scope              | specimen:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680381488/DRAFT+REST+API+Get+Specimen+by+accession+identifier">Get Specimen by Accession Identifier</a>

+ Parameters
    + accession_identifier: `1234-3224-2342-1233` (string, required) - human readable Specimen number
    
+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Specimen_Response`)
            + identity (object, required)
                + gender: MALE (enum, required) - gender of the patient, value from the dictionary GENDER
                    - MALE
                    - FEMALE
                + age: 35 (number, required) - full years between inserted_at and birth date
    
### Process Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/process]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0497
Scope              | specimen:process
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680381533/DRAFT+REST+API+Process+Specimen">Process Specimen</a>

This method is used to set a received_time for a Specimen.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use Get Async Job Processing Details endpoint from Encounter Data Package to get processing result. Response payload will be returned in the job details

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)
        + `received_time`: `2023-04-20T19:14:13Z` (string, required) - The time when Specimen was received for processing

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Reject Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/reject]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0498
Scope              | specimen:reject
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680414209/DRAFT+REST+API+Reject+Specimen">Reject Specimen</a>

This method is used to mark Specimen as unsatisfactory.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use Get Async Job Processing Details endpoint from Encounter Data Package to get processing result. Response payload will be returned in the job details

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)    
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_reject_reasons` (string)
                    + code: `default` (string)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Cancel Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/cancel]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0499
Scope              | specimen:cancel
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680381577/DRAFT+REST+API+Cancel+Specimen">Cancel Specimen</a>

This method must be used to cancel existing Specimen. Method receives signed message (pkcs7) that consists of signed content,
digital signature and signer public key. All signature fields will be validated (including signer certificate authority).

**Important**

1. Signed content of a Specimen must be equal to the Specimen stored in DB. See Get Specimen details
2. status_reason must be added to signed content
3. status must be changed to `entered_in_error` for the purpose of displaying in the signed content

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use Get Async Job Processing Details endpoint from Encounter Data Package to get processing result. Response payload will be returned in the job details

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier
    
+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Cancel Specimen Payload [PATCH /api/patients/{patient_id}/specimens/{id}/actions/cancel/payload]

This chapter describes the structure of a single Specimen creation. This is not an actual web-service.

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer mF_9.B5f-4.1JqM
        api-key: aFBLVTZ6Z2dON1V
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (Specimen_Response)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_cancel_reasons` (string)
                    + code: `default` (string)
        + `status`: `entered_in_error` (string, required)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Invalidate Specimen [PATCH /api/patients/{patient_id}/specimens/{id}/actions/invalidate]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-007-012-001-0500
Scope              | specimen:invalidate
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18680381622/DRAFT+REST+API+Invalidate+Specimen">Invalidate Specimen</a>

This method is used to mark Specimen as unavailable.

It can be processed in async way only, so Server might answer with:
http code| processing method | Client recommendations
--|--|--
202 | async: **default** method | use Get Async Job Processing Details endpoint from Encounter Data Package to get processing result. Response payload will be returned in the job details

+ Parameters
    + patient_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique patient identifier
    + id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique Specimen identifier
    
+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
            X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes (object)    
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `specimen_invalidate_reasons` (string)
                    + code: `default` (string)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

# Data Structures

## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_Collection_V2`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination__V2`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: https://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `6617aeec-15e2-4d6f-b9bd-53559c358f97#17810` (string) - [Request ID](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.
        
### `Response__Error_ValidationFailed_Extended`
+ `error` (object)
    + type: validation_failed (string) - type of an error.
    + message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
    + invalid (array)
        + (object)
            + `entry`: `$.cvv` (string, required) - JSON Path to an invalid property.
            + `entry_type`: `json_data_property` (string, required) - Type of error.
            + `rules` (array)
                + (object)
                    + `description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + params (object) - Validation Parameters.
                        + `values` (array)
                    + `raw_description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + `rule`: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
                            - required
                            - inclusion

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 50 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

### `Response__Pagination__V2`
+ page_number: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 23 (number) - Total number of pages.

## `Access_Tokens`

### `Access_Token`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - OAuth токен доступу
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - Ідентифікатор користувача
+ name: `access_token` (string, required) - Ім'я токена
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - Ідентифікатор токена
+ expires_at: 1498749591 (number, required) - Час, коли токен стає невалідним
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - перелік необхідних доступв через пробіл
    + refresh_token: `my-oauth-refresh-token` (string, required) - Оовлюючий токен
    + redirect_uri: `https://example.com/` (string, required) - URI перенаправлення
    + `grant_type`: `authorization_code`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Ідентифкатор авторизованого користувача

### `Access_Token_1`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - Ідентифікатор користувача
+ name: `change_password_token` (string, required) - Ім'я токена
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - Ідентифікатор токена
+ expires_at: 1498749591 (number, required) - Час, коли токен стає невалідним
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - перелік необхідних доступв через пробіл
    + `grant_type`: `refresh_token`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Ідентифкатор авторизованого користувача

### `Legal_Entity_Request_Public_Short`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional) - the name to show on public sources
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required) -  Unified Register of Businesses and Organizations
+ kveds: 86.1 (array, required) - Ukrainian Industry Classification System, there is a check for required kved: 86.10, 86.21, 47.73
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasure code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ `medical_service_provider` (MSP)
+ `archive`(array[`Archive`], optional)
+ security (object, fixed-type)
    + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ is_active: true (boolean, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `Legal_Entity_Request_Public_V2`
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ type: PRIMARY_CARE (string, required) - type of legal entity
+ residence_address (Address, optional, required) - address where the legal entity is physically located
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ owner(`Owner_V2`,required)
+ accreditation (MSP_Accreditation, optional)
- One of
    + license (object, required)
        + type: MSP (string, required) - License type `Dictionary LICENSE_TYPE`
        + license_number: fd123443 (string, optional)
        + issued_by: Кваліфікацйна комісія (string, required)
        + issued_date: `2017-02-28` (string, required)
        + expiry_date: `2017-02-28` (string, optional)
        + `active_from_date`: `2017-02-28` (string, required)
        + what_licensed: реалізація наркотичних засобів (string, optional)
        + order_no: ВА43234 (string, required) - номер наказу
    + license (object, required)
        + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `archive`(array[`Archive`], optional)
+ security (object, required, fixed-type)
    + `redirect_uri`: `https://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type, required)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Response_Public_V2`
+ `edr` (edr_data, required)
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ type: PRIMARY_CARE (string, required) - type of legal entity [PRIMARY_CARE/OUTPATIENT/PHARMACY]. MIS can't be created using this WS.
+ residence_address (Address, optional, required) - address where the legal entity is physically located
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ accreditation (MSP_Accreditation, optional)
+ license (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string)
    + type: MSP (string, optional) - License type `Dictionary LICENSE_TYPE`
    + license_number: fd123443 (string, optional)
    + issued_by: Кваліфікацйна комісія (string)
    + issued_date: `2017-02-28` (string)
    + expiry_date: `2017-02-28` (string)
    + `active_from_date`: `2017-02-28` (string)
    + what_licensed: реалізація наркотичних засобів (string, optional)
    + order_no: ВА43234 (string) - номер наказу
+ `archive`(array[`Archive`], optional)
+ public_offer(object, fixed-type, required)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Archive`
+ date: `2017-02-28` (string, required) - the date when paper documents were transferred to archive
+ place: `вул. Грушевського 15` (string, required) - the address of building where paper documents are

### Phone
+ type: MOBILE (string, required) - `Dictionary PHONE_TYPE` type of phone Land Line or Mobile. At least one of type must be present. Each type can be represented only once.
+ number: `+380503410870` (string, required) - phone number in format '+38/'

### Email
+ type: PERSONAL, PUBLIC (enum[string], required)
+ email: `email@example.com` (string, required)

### Address
+ type: RESIDENCE (string, required) - `Dictionary ADDRESS_TYPE`. 
+ country: UA (enum[string], required) - `Dictionary COUNTRY`
+ area: Житомирська (string, required) - one of Ukraianian area
+ region: Бердичівський (string, optional) - district of area
+ settlement: Київ (string, required) - city name
+ `settlement_type`: CITY (string, required) - `Dictionary SETTLEMENT_TYPE` - type of settlement as city/town/village etc
+ `settlement_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - settlement identificator from uaadresses
+ `street_type`: STREET (string, optional) - `Dictionary STREET_TYPE` - type of street as street/road/line etc
+ street: `вул. Ніжинська` (string, optional) - street name
+ building: 15 (string, optional) - number of building
+ apartment: 23 (string, optional) - number of appartment
+ zip: 02090 (string, optional) - system of postal codes

### `edr_data`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional)
+ `legal_form`: 140 (string, optional) - `Business form of legal entity received from edr - Use dictionary LEGAL_FORM to show the name`
+ edrpou: 54323454 (string, required) -  Unified Register of Businesses and Organizations
+ kveds (array, required)
    + (object)
        + name: `Діяльність лікарняних закладів` (string, required)
        + code: `86.10` (string, required)
        + is_primary: true (boolean, required)
+ `registration_address` (`registration_address`, required)
+ state: 1 (number, required)

### `registration_address`
+ zip: `02090`
+ country: `УКРАЇНА`
+ address: `Волинська обл., місто Луцьк ВУЛИЦЯ КОНЯКІНА буд. 14 кв. 144`
+ parts (object)
    + atu: `Волинська обл., місто Луцьк`
    + atu_code: `0710100000`
    + street: `ВУЛИЦЯ КОНЯКІНА`
    + house_type: `буд.`
    + house: `14`
    + building_type: null
    + building: ``
    + num_type: `кв.`
    + num: `144`

## `Divisions`

### `Division`
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
+ type: CLINIC (enum, required) - `Dictionary DIVISION_TYPE`
+ legal_entity_id: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, optional)
+ external_id: `3213213` (string, optional)
+ location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.

### workinghours
+ mon (array, optional)
    - 08.00,12.00 (array[string])
    - 14.00,18.00 (array[string])
+ tue (array, optional)
    - 08.00,12.00 (array[string])
+ wed (array, optional)
    - 08.00,12.00 (array[string])
+ thu (array, optional)
    - 08.00,12.00 (array[string])
+ fri (array, optional)
    - 08.00,12.00 (array[string])
+ sat (array, optional)
+ sun (array, optional)

### `Division_Details`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ legal_entity_id: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ include (`Division`)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `Division_Declaration`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ type: clinic (enum, required) - division type
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ external_id: `3213213` (string, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)


### `Division_Details_Cabinet`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ location (Location, optional) - geographical location, if it's empty, division won't be shown on a map.


### `Division_Short_List`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required)
+ type: clinic (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `Division_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required)
+ `legal_entity_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ type: CLINIC (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `crud_division_post`
+ include `Division`

### `crud_division_get`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `Division`
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### Location
+ latitude: 30.1233 (number, required)
+ longitude: 50.32423 (number, required)

## `Medical_Service_Providers`

### `crud_msp`
+ `legal_entity_id`: 5432345432 (string, required)
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[`MSP_License`], required)

### `crud_msp_get`
+ include `crud_msp`

### `crud_msp_post`
+ include `crud_msp`

### `crud_msp_patch`
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[`MSP_License`], required)

### `Medical_Service_Provider`
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ licenses (array[`MSP_License`], required)
+ accreditation (MSP_Accreditation, optional)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: `email@example.com` (string, required)

### `MSP_Short`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)

### `MSP_Details`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка ЦПМСД №1 (string, required)
+ short_name: ЦПМСД №1 (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ status: `ACTIVE` (enum, required)
    + ACTIVE
    + CLOSED
+ email: `email@example.com` (string, required)
+ phones (array[`Phone`], required)
+ addresses (array[`Address`], optional)

### `MSP`
+ licenses (array[`MSP_License`], required)
+ accreditation (MSP_Accreditation, optional)

### `MSP_V2`
+ licenses (array[`MSP_License_V2`], required)
+ accreditation (MSP_Accreditation, optional)

### `MSP_Accreditation`
+ category: SECOND (string, required) - `Dictionary ACCREDITATION_CATEGORY` category of accreditation legal entity. At least one of type must be present. Each type can be represented only once.
+ issued_date: `2017-02-28` (string, optional) - дата видачі
+ expiry_date: `2017-02-28` (string, optional)
+ order_no: fd123443 (string, required) - номер наказу МОЗ
+ order_date: `2017-02-28` (string, required) - дата наказу МОЗ

### `MSP_License`
+ license_number: fd123443 (string, optional)
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу

### `MSP_License_V2`
+ license_number: fd123443 (string, optional)
+ type: MSP (string, required) - License type `Dictionary LICENSE_TYPE`
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of required kveds provided for specific license type
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу

### `Bank_Details`
+ MFO: `351005` (string, required) - bank code
+ name: `Публічне акціонерне товариство «УкрСиббанк»` (string, required) - bank name
+ account_number(array, required)
    + `32009102701026` (string, required) - banks account number

### `Owner_V2`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ tax_id: 3015492563 (string, required)
+ employee_id: `229d6b67-fc18-49ca-be96-7468fc4e1745` (string, optional)
+ `no_tax_id`: false (boolean, optional) - true if owner doesn't have tax_id and false otherwise
+ birth_date: `1991-08-19` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ email: `email@example.com` (string, required)
+ documents (array[`PartyDocument`], required)
+ phones (array[`Phone`], required)
+ position (string, required): `P6`- `Dictionary POSITION`

### PartyDocument
+ type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
+ number: АА120518 (string, required) - document issue number
+ issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
+ issued_at: `2017-02-28` (string, optional) - the date when document was issued

### `Legal_Entity_Related`
+ merged_from_legal_entity (object, required)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - merged_from legal entity id
    + name: Клініка Ноунейм (string, required) - full official name of legal entity
    + edrpou: 5432345432 (string, required) -  Unified Register of Businesses and Organizations
+ reason: на підставі наказу №1111 (string, required) - the legit documents which prove the relationship between legal entities
+ reason_date: `2022-02-10` (string, optional) - the legit documents date
+ type: `ACCESSION` (enum, required) - reorganization type, dictionary `LEGAL_ENTITY_REORGANIZATION_TYPES`
+ is_active: true (boolean, required) - whether relationship between legal entities is active
    - Default: true
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ inserted_by: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - user id

## `Licenses`

### `License`
+ type: MSP (enum, required) - License type `Dictionary LICENSE_TYPE`
+ license_number: fd123443 (string, optional)
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2022-02-28` (string, required)
+ expiry_date: `2026-02-28` (string, optional)
+ active_from_date: `2022-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, optional)

### `crud_licenses_get`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `License`
+ legal_entity_id: `28d9c1be-08f0-403b-aa76-bff228c9904f` (string, required)    
+ is_primary: true (boolean, required)

### `crud_licenses_post`
+ include `License`
+ is_primary: false (boolean, required)

### Job
+ status: `pending` (string, required) - status of request processing.
+ eta: `2018-08-02T10:45:16.000Z` (string, optional) - estimated time of arrivals
+ links (array[Link], optional) - links to resources that has been impactedas a job processing result

### Link
+ entity: `job` (string, required) - name of the entity that link follows to
+ href: `/Jobs/NBXk9EyErUZv1RhXgyvgg` (string, required) - link to entity

### `Reference_request`
+ identifier (Identifier)

### `Reference_response`
+ identifier (Identifier)
+ display_value: `null` (string, required) - This field is required in the Reference, so it may be returned empty.

### `Reference`
+ identifier (Identifier)

### `Identifier`
+ `type`(Codeable_Concept, required) - Description of identifier
+ `value` : `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required)- The value that is unique

### `Codeable_Concept`
+ `coding` (array, required, fixed-type)
    + (object)
        + include `Coding`
+ text (string, optional)

### `Coding`
+ system : `eHealth/resources` (string, required)
+ code : `patient` (string, required) - Symbol in syntax defined by the system

### `Period`
+ start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
+ end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing

### `Quantity`
+ value : `13,5` (number, required)
+ comparator : `>` (string, optional)
+ unit : `kg` (string, optional) - for future use
+ system : `eHealth/ucum/units` (string, required)
+ code: `kg` (string, required)

### `Range`
+ low (Quantity, required)
+ high (Quantity, required)

### `Timing`
+ event: `2018-08-02T10:45:16.000Z`
+ repeat (object)
    + include `Repeat`
+ code: `TIMING_ABBREVIATION` (string, optional)

### `Repeat`
+ count: 10 (string, optional) - Number of times to repeat
- One Of
    + `bounds_duration` (Quantity, optional)
    + bounds_range (Range, optional)
    + bounds_period (Period, optional)
+ `count_max`: 20 (string, optional) - Maximum number of times to repeat
+ duration: 15 (string, optional) - How long when it happens
+ `duration_max`: 25 (string, optional) - How long when it happens
+ `duration_unit`: `UNITS_OF_TIME` (string, optional) - unit of time dictionary
+ frequency: 1 (string, optional) - Event occurs frequency times per period
+ `requency_max`: 4 (string, optinal) - Event occurs up to requency max times per period
+ `period`: 1 (string, optinal) - Event occurs frequency times per period
+ `period_max`: 3 (string, optional) - Upper limit of period, 3-4 hours
+ `period_unit`: `UNITS_OF_TIME` (string, optional) - unit of time dictionary
+ `day_of_week`: `DAYS_OF_WEEK` (string, optinal) - DAYS OF WEEK dictionary
+ `time_of_day`: `15:30` (string, optinal) - Time of day for action
+ when: `EVENT_TIMING` (optional) - Code for time period of occurrence
+ offset: 20 (string, optinal) - Minutes from event, before or after

## `Specimen`

### `Specimen_Collection_Request`
+ collector (Reference_request, required) - Who collected the Specimen.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (enum, required)
                        - employee
                        - patient
- One Of
    + collected_date_time: `2023-04-20T19:14:13Z` (string, optional) - The time when Specimen was collected. ISO 8601 date and time in UTC timezone.
    + collected_period (object, optional) - The period of time during which the Specimen was collected
        + start : `2023-04-20T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2023-04-20T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
+ duration (object, optional) - How long it took to collect Specimen
    + value: 5 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: min (string, required)
    + comparator: `>` (string, optional)
+ quantity (object, required) - The quantity of specimen collected
    + value: 20 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: g (string, required)
+ method (Codeable_Concept, optional) - Technique used to perform collection
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_collection_methods` (string)
            + code: `default` (string)
+ `body_site` (Codeable_Concept, optional) - Anatomical collection site
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string)
            + code: `head` (string)
+ `fasting_status_codeable_concept` (Codeable_Concept, optional) - Whether or how long patient abstained from food and/or drink
    + coding (array, fixed-type)
        + (Coding)
            + system: `fasting_statuses` (string)
            + code: `default` (string)


### `Specimen_Container_Request`
+ identifier: `1-3244-ABC` (string, required) - Id for the container
+ description: `Some container description` (string, optional) - Textual description of the container
+ type (Codeable_Concept, required) - Kind of container directly associated with specimen.
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_container_types` (string)
            + code: `default` (string)
+ capacity (object, required) - Container volume or size
    + value: 30000 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: mg (string, required)
+ specimen_quantity (object, required) - Quantity of specimen within container
    + value: 20 (number, required)
    + system: `eHealth/ucum/units` (string, required)
    + code: g (string, required)
+ `additive_codeable_concept` (Codeable_Concept, optional) - Additive associated with container.
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_container_additives` (string)
            + code: `default` (string)

### `Specimen_Request`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Specimen Identifier
+ status: `available` (string, required) - status of the Specimen according to `specimen_statuses`
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_types` (string)
            + code: `default` (string)
+ condition (Codeable_Concept, optional) - State of the specimen.
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_conditions` (string)
            + code: `default` (string)
+ note: `Some notes` (string, optional) - Comments
+ `managing_organization` (Reference_request, required) - Legal entity where the specimen was created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ `registered_by` (Reference_request, required) - Who registered the specimen.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string, required)
+ parent (array, optional) - Specimens from which this Specimen originated
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: specimen (string)
+ request (array, optional) - Service requests on diagnostic, represents why the Specimen was collected.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: service_request (string)
+ collection (`Specimen_Collection_Request`, required) - Collection details
+ container (array, required) - Direct container of Specimen 
    + (`Specimen_Container_Request`)

### `Specimen_EDP_Request`
+ include `Specimen_Request`
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ collection (`Specimen_Collection_Request`, required) - Collection details
    + procedure (Reference_request, optional) - Procedure that collects the specimen.
        + identifier (Identifier, required)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `procedure` (string, required)
+ `received_time`: `2023-04-20T19:14:13Z` (string, optional) - The time when Specimen was received for processing
+ status: `available` (enum, required) - status of the Specimen according to `specimen_statuses`
    - available
    - unavailable
+ `status_reason` (Codeable_Concept, optional) - in case the Specimen has unavailable status
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_invalidate_reasons` (string)
            + code: `used` (string)

### `Specimen_Response`
+ include `Specimen_Request`
+ status: `available` (enum, required) - status of the Specimen according to `specimen_statuses`
    - available
    - unavailable
    - unsatisfactory
    - `entered_in_error`
+ `managing_organization` (Reference_response, required) - Legal entity where the Specimen was created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Комунальне підприємство Медлаб` (string, required) - This field is filled on creating and never updated after
+ `registered_by` (Reference_response, required) - Who registered the Specimen.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string, required)
    + display_value: `Тарасенко Максим Петрович` (string, required) - This field is filled on creating and never updated after
+ context (Reference_response, optional) - Encounter if Specimen created using EDP.
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string, required)
+ `accession_identifier`: `AX64-654T-X654-AX65` (string, required) - Human readable requisition number
+ `received_time`: `2023-04-20T19:14:13Z` (string, optional) - The time when Specimen was received for processing. ISO 8601 date and time in UTC timezone.
+ parent (array, optional) - Specimens from which this Specimen originated
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: specimen (string)
+ request (array, optional) - Service requests on diagnostic, represents why the Specimen was collected.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: service_request (string)
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `status_reason` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `specimen_invalidate_reasons` (enum, string)
                - `specimen_reject_reasons`
                - `specimen_invalidate_reasons`
                - `specimen_cancel_reasons`
            + code: `default` (string)
+ collection (`Specimen_Collection_Request`, required) - Collection details
    + collector (Reference_response, required) - Who collected the Specimen.
        + identifier (Identifier, required)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (enum, required)
                            - employee
                            - patient
        + display_value: `Василенко Олена Павлівна` (string, required) - This field is filled on creating and never updated after
    + duration (object, optional) - How long it took to collect Specimen
        + value: 5 (number, required)
        + system: `eHealth/ucum/units` (string, required)
        + code: min (string, required)
        + comparator: `>` (string, optional)
        + unit: хв (string, required)
    + quantity (object, required) - The quantity of Specimen collected
        + value: 20 (number, required)
        + system: `eHealth/ucum/units` (string, required)
        + code: g (string, required)
        + unit: грам (string, required)
    + procedure (Reference_response, optional) - Procedure that collects the Specimen.
        + identifier (Identifier, required)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `procedure` (string, required)
+ container (array, required) - Direct container of Specimen 
    + (`Specimen_Container_Request`)
        + capacity (object, required) - Container volume or size
            + value: 30000 (number, required)
            + system: `eHealth/ucum/units` (string, required)
            + code: mg (string, required)
            + unit: міліграм (string, required)
        + specimen_quantity (object, required) - Quantity of Specimen within container
            + value: 20 (number, required)
            + system: `eHealth/ucum/units` (string, required)
            + code: g (string, required)
            + unit: грам (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)  

## Diagnosis

### `Diagnosis_Request`
+ `condition` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
+ rank: `1` (number, optional) - Ranking of the diagnosis. Max value = 10 (for each role type)

### `Diagnosis_Referrence_Condition_2`
+ `condition` (Reference_response, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20` - `dictionary eHealth/ICPC2/condition_codes or eHealth/ICD10/condition_codes`                    
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

### `Diagnosis_Referrence_Condition`
+ `condition` (Reference_response, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20` - `dictionary eHealth/ICPC2/condition_codes or eHealth/ICD10/condition_codes`
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

## Episode Of Care

### `Episode_Of_Care_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string)
+ `status`: `active` (string, required)- `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
                    
+ `patient` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    
+ diagnoses_history (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference_request, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ managing_organization (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
            
+ period (Period, required)
+ care_manager (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string)
+ `status`: `active`  (string, required) - `dictionary - eHealth/episode_statuses`
+ `name`: `Діабет 2018` (string, required)
+ `managing_organization` (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
+ `care_manager` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string) 
+ `status`: `active`  (string, required) - `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
+  `status_history`  (array, optional, fixed-type)
    +(object)
        + status: `closed` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `current_diagnoses` (array, optional, fixed-type)
    + (Diagnosis_Referrence_Condition_2)
+ `diagnoses_history` (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference_response, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ `status_history` (array, required, fixed_type)
    + (object)
        + status: `active` (string, required)
        + status reason (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string) \\ wrong_patient, misspelling
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)            
+ `managing_organization` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Медікал Солюшнc` (string, required) - This field is filled on creating and never updated after
            
+ `period` (Period, required)
    + end: `2018-08-03T11:00:00.000Z` (string, optional)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
+ `care_manager` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    

### `Update_Episode`
+ name: `Інсулінонезалежний діабет` (string, optional)
+ `care_manager` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)

### `Cancel_Episode`
+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    - text (string)

### `Close_Episode`
+ `period` (object, required)
    + `end`: `2018-08-02T10:45:16.000Z` (string, required)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
    - text (string)

### `Episode_Of_Care_Short`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ name: `Діабет 2018` (string, required)
+ `status`: `active` (string, required)
+ period (Period, required)
    + end: `2018-08-03T11:00:00.000Z` (string, optional)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)

### `Episode_Of_Care_Short_With_Diagnoses`
+ include `Episode_Of_Care_Short`
+ `managing_organization` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Медікал Солюшнc` (string, required) - This field is filled on creating and never updated after
+ diagnoses (array, required, fixed-type)
    + (Diagnosis_Referrence_Condition_2)  

## Encouner

### `Encounter_Base` (object)
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
    + end: `2018-08-02T11:00:00.000Z` (string, required)                       
+ `incoming_referral`(Reference_request, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ `visit` (Reference_request, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference_request, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`
    
    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string) 
            + code: `11429006` (string)- `dictionary eHealth/encounter_types`
            
+ priority (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_priority` (string) 
            + code: `routine` (string)- `dictionary eHealth/encounter_types`
                    
+ performer (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
                    
+ reasons (array, optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/reasons` (string) 
             + code: `A02` (string) - `dictionary eHealth/ICPC2/reasons`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string)
                + code: `D09` (string)-  `dictionary eHealth/ICPC2/reasons`

+ diagnoses (array, required, fixed-type)
    + (`Diagnosis_Request`)
        
        
+ actions (array, optional, fixed-type) - actions are required for class PHC and forbidden for other classes
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T50` (string)- `dictionary eHealth/ICPC2/actions`
+ `action_references` (array, Reference_request, optional) - action references are forbidden for class PHC
    + (object)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `service` (string)
                    
+ division (Reference_request, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)
+ supporting_info (array,optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `observation` (string)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `diagnostic_report` (string)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ hospitalization (object,optional)
    + admit_source - From where patient was admitted (physician referral, transfer). Field is required if parameter `encounter.type.coding.code = discharge`.
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_admit_source` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_admit_source`
    + re_admission - The type of hospital re-admission that has occurred
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_re_admission` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_re_admission`

    + destination (Reference_request, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: division/legal_entity (string)

    + discharge_disposition - Category or kind of location after discharge. Field is required if parameter `encounter.type.coding.code = discharge`.
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_disposition` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_disposition`
    + discharge_department - Department from which patient has been discharged. It is not division. Field is required if parameter `encounter.type.coding.code = discharge`.
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_department` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_department`
    + `pre_admission_identifier`: `12345` (string) - Pre-admission identifier

### `Encounter_Request` 
+ encounter (`Encounter_Base`, required, fixed-type)
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)
        + `context` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
+ `allergy_intolerances` (array[`Allergy_Intolerance_Request`], optional, fixed-type)
+ immunizations (array[`Immunization_Request`], optional, fixed-type)
+ devices (array[`Device_Request`], optional, fixed-type)
+ `risk_assessments`(array[`Risk_Assessment_Request`], optional, fixed-type)
+ `medication_statements` (array[`Medication_Statement_Request`], optional, fixed-type)
+ `medication_administrations` (array[`Medication_Administration_EncounterPCG_Request`], optional, fixed-type)
+ `diagnostic_reports` (array[`Diagnostic_Report_EncounterPCG_Request`], optional, fixed-type)
+ procedures (array[`Procedure_EncounterPCG_Request`], optional, fixed-type)
+ `clinical_impressions` (array[`Clinical_Impression_EncounterPCG_Request`], optional, fixed-type)
+ specimens (array[`Specimen_EDP_Request`], optional, fixed-type)
+ `device_dispenses`(array[`Device_Dispense_EncounterPCG_Request`], optional, fixed-type)
+ `device_associations` (array[`Device_assosiation_request`], optional, fixed-type)
+ `detected_issues` (array[`Detected_issue_Request`], optional, fixed-type)

### `Encounter_Response`
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `origin_episode` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`                   
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
    + end: `2018-08-02T11:00:00.000Z` (string, required)                       
+ `incoming_referral`(Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ `visit` (Reference_response, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference_response, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`

    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string)
            + code: `PC` (string) - `dictionary eHealth/encounter_types`


+ performer (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
    + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after

+ reasons (array,required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/reasons` (string) 
             + code: `A02` (string) - `dictionary eHealth/ICPC2/reasons`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string)
                + code: `D09` (string)-  `dictionary eHealth/ICPC2/reasons`
        
+ diagnoses (array, optional, fixed-type)
    + (`Diagnosis_Referrence_Condition`)
        
        
+ actions (array, required, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`

    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`

+ `action_references`  (array, Reference_response, optional)
    + (object)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `service` (string)

+ division (Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)
+ supporting_info (array,optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `observation` (string)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `diagnostic_report` (string)
+ `cancellation_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) - wrong_patient, misspelling
            
+ `explanatory_letter`: `Діагноз був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ hospitalization (object,optional)
    + admit_source - From where patient was admitted (physician referral, transfer)
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_admit_source` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_admit_source`
    + re_admission - The type of hospital re-admission that has occurred
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_re_admission` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_re_admission`

    + destination (Reference_response, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: division/legal_entity (string)

    + discharge_disposition - Category or kind of location after discharge
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_disposition` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_disposition`
    + discharge_department - `Department from which patient has been discharged. It is not division`
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_department` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_department`
    + `pre_admission_identifier`: `12345` (string) - Pre-admission identifier

### `Paper_referral`
+ requisition: `1111-2222-3333-4444` (string, optional) - `Service request number`
+ requester_legal_entity_name: `Some clinic` (string, optional) - Requester legal entity name
+ requester_legal_entity_edrpou: `12345678` (string, required) - Requester legal entity edrpou
+ requester_employee_name: `John` (string, required) - Requester employee name
+ `service_request_date`: `2018-10-08` (string, required) - Service request date
+ note: `Some notes` (string, optional) - Some notes

### `Encounter_Short`
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`                
+ period (object , required)
    + start: `2018-08-02T10:45:16.000Z` (string, required)
    + end: `2018-08-02T11:00:00.000Z` (string, required)                       
+ `episode` (Reference_request, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string)
            + code: `discharge` (string) - `dictionary eHealth/encounter_types`
+ `performer_speciality` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string) - dictionary
            + code: `VIROLOGY` (string) - `code from dictionary SPECIALITY_TYPE`

### `Detected_issue_Request`                   
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status:  `inactive` (string, required) - `dictionary - detected_issue_statuses`
+ code (Codeable_Concept, optional) - Specific type of detected issue
    + coding (array, fixed-type)
        + (Coding)
            + system: `detected_issue_categories` (string) 
            + code: `default` (string)- `dictionary -  detected_issue_categories`
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ identified_date_time : `2018-08-02T10:45:16.000Z`,
+ recorder: (Reference_request, required) - The employee who registered the issue
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ author: (Reference_request, required) - The employee or person who identified the issue
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (enum, required)
                        - employee
                        - patient
+ implicated: (Reference_request, optional) - device which caused an issue in the subject
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device` (string)   
+ detail: `some description` (string, optional)
+ subject (Reference_request, required) - device that has an issue
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device` (string)
+ `based_on`: (Reference_request, optional) - another Detected Issue on which this is based on
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `detected_issue` (string)

### `Device_assosiation_request`
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ device (Reference_request, required) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device` (string) 
+ status:  `inactive` (string, required) - `dictionary - device_association_statuses`
+ `body_site` (Codeable_Concept, optional) - Anatomical collection site
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_structures` (string)
            + code: `head` (string)
+ association_date: `2024-08-02` (string, optional) - The date of implantation\attachment or explantation\detachment of the device to the patient
+ recorded: `2024-08-05T09:00:00.000Z` (string, required) - The date of setting the direction of the relationship of the device to the patient
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ recorder: (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)

### Device_Dispense_EncounterPCG_Request
+ include `Device_Dispense_Base`
+ `based_on` (Reference_request, optional) - Device request
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `device_request` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `when_handed_over`:`2018-08-02T10:45:16.000Z` (string, required) 
+ `part_of` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `procedure` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `encounter` (Reference_response, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum)
                            - condition
                            - observation
                            - diagnostic_report
                            - procedure
                            - encounter
                            - episode 
                            - device
                            - device_association
+ `details` (array[`Device_Dispense_Detail_EncounterPCG_Request`], fixed, required)

### `Device_Dispense_Detail_EncounterPCG_Request`
- One Of
    + `device` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, required, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `device_definition` (enum, required)
                            - device_definition
                            - device
            + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
    + `device_code` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `device_definition_classification_type` (string)
                + code: `30221` (string)
+ quantity (object, required)
    + value: 10 (number, required)
    + system: `device_unit` (string, required)
    + code: piece (string, required)
+ `sell_price`: 18.65 (number, optional) - price for one device

### Device_Dispense_Base
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Device Dispense Identifier
+ `status`: `completed`  (string, required) 
+ `performer` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `location` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `b4a6d991-0bf7-476f-b3cf-bec83f044b1b` (string, required)
+ `note`: `Some notes` (string, optionnal)

## `Clinical Impression`
### `Clinical_Impression_EncounterPCG_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: completed (string, required)
+ description: `Some description of the clinical impression` (string, optional)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/clinical_impression_patient_categories` (string)
            + code: `insulin_1` (string)
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    - effective_period (object, optional, fixed-type)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, required) - End time with inclusive boundary
+ assessor (Reference_request, required) - `author of the clinical impression`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: Петров Іван Іванович
+ previous (Reference_request, optional) - `reference to one of previous clinical impression`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `clinical_impression` (string)
+ problems (array, optional, fixed-type) - `relevant impressions of patient state`
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum)
+ summary: `Some summary` (string, optional)
+ findings (array, optional, fixed-type)
    + (object)
        + `item_reference` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `condition` (enum)
                                - observaton
        + basis: `Some basis` (string, optional)                    
+ supporting_info (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (enum)
                            - procedure
                            - diagnostic_report
                            - encounter
+ note: `Some note` (string, optional)

### Procedure_EncounterPCG_Request
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique procedure identifier 
+ `status` : `completed` (enum, required) - Status for provided procedure
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)            
+ code (Reference_request, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - `performed_date_time`: `2018-08-02T10:45:16.000Z` (string, optional) - date and time when the procedure have been performed
    - `performed_period` (object , optional) - is required if procedure based on service request with quantity that has code=MINUTE (system=SERVICE_UNIT)
        + start: `2018-08-02T10:45:16.000Z` (string, required)
        + end: `2018-08-12T10:45:16.000Z` (string, required) 
+ `recorded_by` (Reference_request, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_request, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)

+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)

+ complication_details (array, reference, optional) - Any complications that occurred during the procedure, or in the immediate post-performance period. Could be filled only for procedure in encounter package and only with reference to condition from same encounter
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ used_codes (array,optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/assistive_products` (string) 
             + code: `03_05_38` (string)
             
+ used_references (array, optional) - Items used during procedure.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string) 
+ `focal_device` (object, optional) - Manipulated, implanted, or removed device
    + action (Codeable_Concept, optional) - Kind of change to Device
        + coding (array, fixed-type)
            + (Coding)
             + system: `procedure_focal_device_actions` (string) 
             + code: `some_action` (string)
    + manipulated (Reference_request, required) - Implanted Device used for this procedure
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `device` (string) 

## `Diagnostic Report`
### `Diagnostic_Report_Base_request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ status: `final` (string, required)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ category (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/diagnostic_report_categories` (string)
                + code: `diagnostic_procedure` (string)
+ effective_period(Period, optional)
+ issued: `2018-10-08T09:46:37.694Z` (string, required)
+ conclusion: `At risk of osteoporotic fracture` (string, optional)
+ `conclusion_code` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10_AM/condition_codes` (string)
            + code: `H04.2` (string)
+ `recorded_by` (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ specimens (array, optional)
    + (Reference_request)
        + identifier (Identifier, optional, fixed-type)
            + type (Codeable_Concept, required)
                + coding (array, required,fixed-type)
                    + (Coding)
                        + code: `specimen` (string)
+ `used_references` (array, optional) - Items used in the report.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `equipment` (string) 

### `Diagnostic_Report_EncounterPCG_Request`
+ include `Diagnostic_Report_Base_request`
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required) - could be false
+ `managing_organization` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
- One Of
    - performer (optional) - required if primary_source=true
        - One Of
            - reference (object, optional)
                + identifier (object, optional)
                    + type (object, optional)
                        + coding (array, optional, fixed-type)
                            + object
                                + system: `eHealth/resources` (string, required)
                                + code: `employee` (string)
                        + text: `Галина Олександрівна` (string)
                    + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
            - text: `Галина Олександрівна` (string)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ `results_interpreter` (optional)
    - One Of
        - reference (object, optional)
            + identifier (object, optional)
                + type (object, optional)
                    + coding (array, optional, fixed-type)
                        + object
                            + system: `eHealth/resources` (string, required)
                            + code: `employee` (string)
                + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
        - text: `Опанасенко Олексій Володимирович` (string, optional)


### `Medication_Administration_EncounterPCG_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique medication admnistration identifier
+ `part_of` (array, optional) - A larger event of which this particular event is a component or step.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `Procedure|Medication administration` (string)
+ status : `completed` (enum, required) - Status for provided medication administration
    - `completed`
    - `entered_in_error`
+ category (Codeable_Concept, required) - Type of medication usage
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/medication_administration_categories` (string)
            + code: `409063005` (string)
+ medication (Reference_request, required) - What was administered, medication with type BRAND
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication` (string)
+ `context` (Reference_request, required) - Encounter or Episode of Care administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ performer (Reference_request, required) - Who performed the medication administration
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
+ `reason_references` (array, optional) - Condition or observation that supports why the medication was administered
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition|Observation|Diagnostic_report` (string)
+ request (Reference_request, optional) - Request administration performed against
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ note: `Some notes` (string, optional)
+ dosage (array, required, fixed-type) - Details of how medication was taken. SHALL have at least one of dosage.dose or dosage.rate
    + (Dosage)

### `Dosage`
+ text: `Rapid daily-dose escalation, until tolerated, from 3 mg/d, and then 10 mg/d, to the recommended maintenance dose of 30 mg IV over 120 min, 3 times per wk on alternate days for up to 12 wk` (string, optional) - Free text dosage instructions e.g. SIG
+ site (Codeable_Concept) - Body site administered to
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/anatomical_structure_administration_site_codes` (string)
            + code: `344001` (string)
+ route (Codeable_Concept) - How drug should enter body
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/route_codes` (string)
            + code: `46713006` (string)
+ method (Codeable_Concept) - Technique for administering medication
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/administration_methods` (string)
            + code: `419747000` (string)
+ dose (Simple_Quantity) - Amount of medication per dose
- One Of
    + rate_ratio (Ratio)
    + `rate_quantity` (Simple_Quantity)

### `Simple_Quantity`
+ value: `13,5` (number, required)
+ unit: `mg` (string, optional)
+ system: `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Ratio`
+ numerator (Simple_Quantity, required)
+ denominator (Simple_Quantity, required)

## `Medication Statement`
### `Medication_Statement_Request`
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ status:  `active` (string, required) - `dictionary - eHealth/medication_satement_statuses`
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ effective_period: `Вживає з 2017-го року регулярно` (string, optional) 

+ `medication_code` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/medical_statement_medications` (string) 
            + code: `Spine_board` (string)
+ note: `Some text` (string, optional)
+ dosage: `5 ml/day` (string, optional)


### `Medication_Administration_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique medication admnistration identifier
+ `part_of` (array, optional) - A larger event of which this particular event is a component or step.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `Procedure|Medication administration` (string)
+ status : `completed` (enum, required) - Status for provided medication administration
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/procedure_cancel_reasons` (string)
                    + code: `default` (string)
+ category (Codeable_Concept, required) - Type of medication usage
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/medication_administration_categories` (string)
            + code: `409063005` (string)
+ medication (Reference_response, required) - What was administered, medication with type BRAND
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication` (string)
+ `context` (Reference_response, required) - Encounter or Episode of Care administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ performer (Reference_response, required) - Who performed the medication administration
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after   
    
+ `managing_organization` (Reference_response, required) - legal entity where medication administration was provided
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Київська обласна лікарня №1` (string, required) - This field is filled on creating and never updated after

+ `reason_references` (array, optional) - Condition or observation that supports why the medication was administered
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition|Observation|Diagnostic_report` (string)
+ request (Reference_response, optional) - Request administration performed against
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ note: `Some notes` (string, optional)
+ dosage (array, required, fixed-type) - Details of how medication was taken. SHALL have at least one of dosage.dose or dosage.rate
    + (Dosage)


## `Risk_Assesment`
### `Risk_Assessment_Request`
+ id: `70a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status: `preliminary` (string, required)
+ method (Codeable_Concept, optional) 
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/risk_assesment_methods` (string)
            + code: `deafult_code` (string)- `dictionary - eHealth/risk_assesment_methods`
+ code ( Codeable_Concept, required)
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/risk_assesment_codes` (string)
            + code: `R80` (string)- `dictionary - eHealth/risk_assesment_codes`
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ mitigation: `some text` (string, optional)
+ basis (Ext_Reference, optional)
    + references (array, fixed-type)
        + (object)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)
- One Of
    - reason_references (array, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `condition` (string)
                + text (string, optional)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `reason_codes` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/risk_assessment_reasons` (string, required)
                + code: `default_risk_assessment_reason` (string)
        + text: `причина хвороби` (string)        
+ predictions (array, optional, fixed-type)
    + (object)
        + outcome (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_outcomes` (string)
                    + code: `default_outcome` (string)
        - One Of
            + probability_range (Range, optional)
            + probability_decimal (number, optional)

        + `qualitative_risk` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_qualitative_risks` (string)
                    + code: `default_qualitative_risk` (string)
        + relative_risk(number, optional)
        - One Of
            + when_range (Range, optional)
            + when_period (Period, optional)
            
        + rationale: `some text` (string, optional)
            
+ mitigation: `some text` (string, optional)
+ comment: `some text` (string, optional)


### `Risk_Assessment_Response`
+ include `Risk_Assessment_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

## `Device`
### `Device_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ identifier: (array, optional)
   + (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `external_system` (string) 
                    + code: `prozoro` (string)
+ definition (Reference_request, optional)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device_definition` (string)
+ name: (array, required) 
    + object
        + `type`: `user_friendly` (enum, required) - Device name type. Dictionary `device_name_type`
            - user_friendly
            - registered
            - patient_reported    
        + value: `Тест-смужки Accu-Chek Active для глюкометра` (string, required) - Device name
+ status:  `inactive` (string, required) - `dictionary - eHealth/device_statuses`
+ serial_number: `NSPX30` (string, optional)
+ parent: (Reference_request, optional)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `device` (string)
+ recorder: (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ property: (array, optional)
    + object
        + `code` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `device_properties` (string) 
                    + code: `default` (string) - `dictionary -  device_properties`
        - One Of
            - value_quantity (object)
                + value : `13,5` (number, required)
                + comparator : `>` (string, optional)
                + unit : `kg` (string, optional)
                + system : `eHealth/ucum/units` (string, required)
                + code: `kg` (string, required)
            - value_codeable_concept (object)
                + `coding` (array, required, fixed-type)
                    + (object)
                        + system : `some_dictionary` (string, required)
                        + code : `dictionary_value` (string, required) - Symbol in syntax defined by the system
            - value_string: `some description` (string)
            - value_boolean: true (boolean)
            - value_range (object, fixed-type)
                + low (object, required)
                    + value : `13,5` (number, required)
                    + comparator : `>` (string, optional)
                    + unit : `kg` (string, optional)
                    + system : `eHealth/ucum/units` (string, required)
                    + code: `kg` (string, required)
                + high (object, required)
                    + value : `20,5` (number, required)
                    + comparator : `<` (string, optional)
                    + unit : `kg` (string, optional)
                    + system : `eHealth/ucum/units` (string, required)
                    + code: `kg` (string, required)
            - value_integer: 10 (number)
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `device_definition_classification_type` (string) 
            + code: `2345678` (string)- `dictionary -  device_definition_classification_type`
+ lot_number: `RZ12345678` (string, optional)
+ manufacturer: `GlobalMed, Inc` (string, optional)
+ manufacture_date: `1999-01-01T00:00:00.000Z` (string, optional)
+ expiration_date: `2020-01-01T00:00:00.000Z` (string, optional)
+ model_number: `NSPX30` (string, optional)
+ note: `Імплант був вилучений по причині заміни на новий` (string, optional)

### `Ext_Reference`
+ reference (Reference_request, optional)
+ text (string, optional)

## `Immunization`

### `Immunization_Request`
 
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccine_codes` (string)
            + code: `HepAHepB` (string) - `dictionary - eHealth/vaccine_codes`
            

+ context : (Reference_request, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date

+ primary_source: `true` (boolean, required)
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/immunization_report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site : ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/immunization_body_sites` (string)
            + code: `oral` (string) - `dictionary - eHealth/immunization_body_sites`
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string)- `dictionary - eHealth/vaccination_routes`
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, optinal)
    + system: `eHealth/immunization_dosage_units` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        - `reasons` (array, optional)
            + (object)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/reason_explanations` (string, required)
                        + code: `immunization_by_calendar` (string)
                + text: `Планове за календарем щеплень` (string)
        - `reasons_not_given` (object, optional) - Why immunization did not occurr
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/reason_not_given_explanations` (string, required)
                    + code: `lack_of_injection_supply` (string)
            + text: `відсутність ін'єкційних матеріалів` (string)

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string) -  `dictionary - eHealth/vaccination_target_diseases` 
                        
    
                    


### `Immunization_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccine_codes` (string)
            + code: `HepAHepB` (string) - `dictionary - eHealth/vaccine_codes`
            

+ context : (Reference_response, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/immunization_report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site  ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/immunization_body_sites` (string)
            + code: `oral` (string) - `dictionary - eHealth/immunization_body_sites`
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string) `dictionary- eHealth/vaccination_routes`
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, required)
    + system: `eHealth/immunization_dosage_units` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        - `reasons` (object, optional)
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/reason_explanations` (string, required)
                    + code: `immunization_by_calendar` (string)
            + text: `Планове за календарем щеплень` (string)
        - `reasons_not_given` (object, optional) - Why immunization did not occurr
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/reason_not_given_explanations` (string, required)
                    + code: `lack_of_injection_supply` (string)
            + text: `відсутність ін'єкційних матеріалів` (string)
            
+ reactions : (array, optional) // Details of a reaction that follows immunization
    + (object)
        + detail : (Reference_response, optional) , // Additional information on reaction Observation
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string) `dictionary - eHealth/vaccination_target_diseases`
                        
                    


## `Allergy_Intolerance`
### `Allergy_Intolerance_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ `clinical_status` : `active` (string, required) - `dictionary - eHealth/allergy_intolerance_clinical_statuses`
+ `verification_status` : `confirmed` (string, required) - `dictionary - eHealth/allergy_intolerance_verification_statuses`
+ type : `allergy` (string, required)- `dictionary - eHealth/allergy_intolerance_types`
+ category : `food`(string, required)- `dictionary - eHealth/allergy_intolerance_categories`
+ criticality : `low`(string, required)- `dictionary - eHealth/allergy_intolerance_criticalities`
+ context (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code  ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerance_codes` (string)
            + code: `227493005` (string)- `dictionary - eHealth/allergy_intolerance_codes`

+ `onset_date_time` : `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, required)

+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ last_occurrence : `2017-10-08T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction


### `Allergy_Intolerance_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ `clinical_status` : `active` (string, required) - `dictionary - eHealth/allergy_intolerance_clinical_statuses`
+ `verification_status` : `confirmed` (string, required) - `dictionary - eHealth/allergy_intolerance_verification_statuses`
+ type : `allergy` (string, required)- `dictionary - eHealth/allergy_intolerance_types`
+ category : `food`(string, required)- `dictionary - eHealth/allergy_intolerance_categories`
+ criticality : `low`(string, required)- `dictionary - eHealth/allergy_intolerance_criticalities`
+ context: (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerance_codes` (string)
            + code: `227493005` (string)- `dictionary - eHealth/allergy_intolerance_codes`
                

+ onset_date_time : `2016-01-01T00:00:00.000Z` (string, required)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ last_occurrence : `2018-07-02T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction

# Observation

### `Observation_Request_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required) - `dictionary - eHealth/observation_statuses`
+ `diagnostic_report` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)
- One Of
    - effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    - effective_period (object, optional, fixed-type)
        + start : `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
        + end : `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `true` (boolean, required) - could NOT be false on DRP
- One Of
    - performer (object, optional) - if primary_source=true
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text: `Галина Олександрівна` (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)
    - `report_origin` (object, optional) - if primary_source=false
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)
+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string) 
            + code: `head` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `anamnesis` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit (number, optional)// decimal Lower limit of detection
        + upper_limit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ `reaction_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `immunization` (string)
    
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required)
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/observation_interpretations` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_types` (string)
                            + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                                
                + `applies_to` (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_applications` (string)
                            + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)
+ specimen (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `specimen` (string)

+ device (Reference_response, optional) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `equipment` (string)                     

###  `Observation_Request_Base_DRP`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required) - `dictionary - eHealth/observation_statuses`
+ `diagnostic_report` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)
                

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    + effective_period (Period, optional, fixed-type)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)

+ primary_source: `true` (boolean, required) - could NOT be false on DRP
+ `performer` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string) 
            + code: `head` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `anamnesis` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit (number, optional)// decimal Lower limit of detection
        + upper_limit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ `reaction_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `immunization` (string)
    
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required)
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/observation_interpretations` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_types` (string)
                            + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                                
                + `applies_to` (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_applications` (string)
                            + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)
+ specimen (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `specimen` (string)
                    
+ device (Reference_response, optional) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `equipment` (string)

### `Observation_Request_1` (`Observation_Request_Base`)
+ `context` (Reference_request, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)

### `Observation_Request_2` (`Observation_Request_Base`)
+ `context` (Reference_request, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)

### `Observation_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required)
+ diagnostic_report (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ `context` (Reference_response, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_date_time: `2018-10-08T09:46:37.694Z` (string, optional)
    + effective_period (Period, optional)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference_response, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
        + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
        + text: `зі слів пацієнта` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string) 
            + code: `head` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `anamnesis` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lowerLimit (number, optional)// decimal Lower limit of detection
        + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ specimen (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `specimen` (string)
                    
+ device (Reference_response, optional) - Item used during observation.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `equipment` (string) 

## Condition
### `Condition_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `A89` (string)
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string)
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `head` (string)
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)//Estimated or actual date,  date-time when condition starts
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string)
+ evidences (array, optional, fixed-type)
    + (object)
        + codes (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string)
                        
        + details (array, optional, fixed-type)
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)

### `Condition_Response`
+ id: `6fe6d880-f100-4e39-a278-1d14eb8472ef` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    - `asserter` (object, optional)
        + identifier (object, optional)
            + type (object, optional)
                + coding (array, optional, fixed-type)
                    + object
                        + system: `eHealth/resources` (string, required)
                        + code: `employee` (string)
                + text (string)
            + value: `97d57238-ffbe-4335-92ea-28d4de117ea2` (string, required)                        
    - `report_origin` (object, optional)
        + coding (array, optional, fixed-type)
            + object
                + system: `eHealth/report_origins` (string, required)
                + code: `patient` (string)
        + text: `зі слів пацієнта` (string)
+ `context` (Reference_response, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `K87` (string)
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string)
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `head` (string)
                
    
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string)
                
+ evidences (array, optional, fixed-type)
    + (object)
        + codes (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string)
                        
        + details (array, optional, fixed-type)
            + (Reference_response)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)

### `Qualify_Medication_request_Request_List_program_post_data`
+ `id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string,required) - `Medical program Identifier`

### `Program_medications_for_Qualify`
+ id: `0f2fbf93-3041-4c0d-a3cf-ff558c861df8` (string, required) - Program participant identifier
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Амлодипін-КВ ` (string, required) - Medication name
+ `form` :  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program
+ wholesale_price: 25.14 (number, optional) - Wholesale pricing per package, UAH
+ consumer_price: 34.03 (number, optional) - Retail price for packaging, UAH
+ `reimbursement_daily_dosage`: 1.4438 (number, optional) - The amount of the compensation of the daily dose of the medical product, UAH
+ `estimated_payment_amount`: 5.15 (number, optional) - Amount of additional payment for packing, UAH
+ `container_dosage` (`Dosage_container`, optional)
+ `package_min_qty`: 20 (number, optional) - indivisible part of medicine pacage
+ `package_qty`: 20 (number, optional) - quantity of medicine in a pacage
+ `start_date`: `2019-01-01` (string, optional) - Active from date
+ `end_date`: `2019-06-30` (string, optional) - Active to date
+ `registry_number`: `REG-1111` (string, optional) - Registry number
+ `drlz_sku_id`: `0404466792737630283703997321` (string, optional) - identifier of a product out of external DRLZ register 
+ `package_qty_divisible`: TRUE (boolean, required) - package divisible flag

### `Qualify_by_ID_Request_for_Medication_request_Responce`
+ include `Qualify_Medication_request_Request_Responce`
+ `participants` (array, required)
    + (object)
        + include `Program_medications_for_Qualify`

### `Qualify_Medication_request_Request_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Програма "Доступні ліки"`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this Medication request Request
    - VALID
    - INVALID
+ `rejection_reason` : ` Innm not on the list of approved innms for program 'DOSTUPNI LIKI' !` (string) - Reason to fetch invalid status

### `Manufacturer`
+ `name` : `ПАТ "Київський вітамінний завод"` (string, required)
+ `country` : `UA` (string, required) - `Dictionary COUNTRY`

## `medical_programs`
### `medical_programs_request`
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `same_mnn_in_treatment_period`: true (boolean, required) - Allow to create new medication request with the same mnn in one treatment period
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

### `Medical_Program_Response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `medical_program_settings` (`Medical_program_settings`, required) - some conditions for using program
+ `medical_program_settings_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request with some settings
+ `is_active`: `true` (boolean, optional) - Is medical program active or not. True - Active; False - Inactive
+ `medication_dispense_allowed`: true (boolean, optional) - posibility to create medication dispense with program
+ `medication_dispense_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication dispense
+ `medication_request_allowed`: true (boolean, optional) - posibility to create medication request with program
+ `medication_request_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request
+ `type`: `MEDICATION` (string, optional) - `Dictionary MEDICAL_PROGRAM_TYPE`
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, optional)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, optional)

### `Medical_Program_Response_without_settings`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, optional) - Is medical program active or not. True - Active; False - Inactive
+ `medication_dispense_allowed`: true (boolean, optional) - posibility to create medication dispense with program
+ `medication_dispense_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication dispense
+ `medication_request_allowed`: true (boolean, optional) - posibility to create medication request with program
+ `medication_request_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request
+ `type`: `MEDICATION` (string, optional) - `Dictionary MEDICAL_PROGRAM_TYPE`
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, optional)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, optional)

### `Medical_program_settings`
+ `care_plan_required`: true (boolean, required) - posibility to create medication request with reference on care plan
+ `employee_types_to_create_medication_request` (array, required) - posibility to create medication request for particular types of employees
    + `SPECIALIST` (string, required)
    + `DOCTOR` (string, required)    
+ `skip_mnn_in_treatment_period`: true (boolean, required) - posibility to create new medication request with the same mnn in one treatment period
+ `skip_employee_validation`: true (boolean, required) - posibility to create medication request by any user who has a scope
+ `speciality_types_allowed` (array, optional) - posibility to create medication request or care plan activity for particular specialities of employees
    + `ENDOCRINOLOGY` (string, required)
    + `PEDIATRIC_NEUROLOGY` (string, required)
+ `conditions_icd10_am_allowed` (array, optional) - posibility to create medication request or care plan activity for particular conditions from ICD10_AM
    + `A00.0` (string, required)
    + `A00.1` (string, required)
+ `conditions_icpc2_allowed` (array, optional) - posibility to create medication request or care plan activity for particular conditions from ICPC2
    + `A01` (string, required)
    + `A02` (string, required)
+ `providing_conditions_allowed` (array, optional) - posibility to create care plan activity for particular terms of service. - `Dictionary PROVIDING_CONDITION`
    + `INPATIENT` (string, required)
    + `OUTPATIENT` (string, required)
+ `medication_request_max_period_day`: 90 (number, optional) - maximum period length (in days) allowed for the Medication request with the medical program
+ `skip_medication_request_employee_declaration_verify`: true (boolean, required) - allows to skip verification if employee has declaration with patient to create medication request
+ `skip_medication_request_legal_entity_declaration_verify`: true (boolean, required) - allows to skip verification if employee in legal entity that has declaration with patient to create medication request
+ `multi_medication_dispense_allowed`: true (boolean, required) - check if medication request can be dispensed partially
+ `skip_medication_dispense_sign`: true (boolean, required) - check if process medication dispense should be invoked using digital sign
+ `medication_request_notification_disabled`: true (boolean, required) - check if patient should not be notified via SMS on operations with medication request (create/reject/resend)
+ `skip_contract_provision_verify`: true (boolean, required) - check if validations of Contract and Medical Program Provisions should be invoked for the medical program
+ `medication_dispense_period_day`: 90 (number, optional) - medication dispense period (in days)
+ `medical_program_change_on_dispense_allowed`: true (boolean, required) - check if medication request can be dispensed with another medical program.
+ `patient_categories_allowed` (array, optional) - posibility to create care plan activity for particular terms of service. - `Dictionary eHealth/clinical_impression_patient_categories`
    + `insulin_1` (string, required)
    + `insulin_2` (string, required)
+ `license_types_allowed` (array, optional) - the types of legal entity licenses required to dispense medication request - `Dictionary LICENSE_TYPE`
    + `PHARMACY` (string, required)
    + `PHARMACY_DRUGS` (string, required)
+ `device_request_allowed_code_types` (array, optional) - describes at which way a Device should be represented in care plan activity
    + `CLASSIFICATION_TYPE`
    + `DEVICE_DEFINITION`
+ `request_notification_disabled`: true (boolean, optional) - check if patient should not be notified via SMS on operations with medication or device request (create/reject/resend)
+ `skip_dispense_division_dls_verify`: true (boolean, optional) -  Check if validation of DLS license should be invoked for the medical program

### `medical_programs_list`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

## `Medication request`
### `Medication_request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

### `Medication_request_Public_Response_for_Pharmacist`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `person` (`Person_Medication_Request_for_Pharmacist`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

### `Medication_request_Public_Response_with_Medical_Program_min`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ `inform_with`: `ce74e177-9c3b-4426-aeec-294674f2d65a` (string, optional) - Identifier of person's auth method.


### `Medication_request_reject_Public_Response_with_Medical_Program_min`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

### `Medication_request_Public_Response_with_Medical_Program_min_block_reason_required`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ `inform_with`: `ce74e177-9c3b-4426-aeec-294674f2d65a` (string, optional) - Identifier of person's auth method.

### `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `person` (`Person_Medication_Request_for_Pharmacist`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ `inform_with`: `ce74e177-9c3b-4426-aeec-294674f2d65a` (string, optional) - Identifier of person's auth method.

### `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `person` (`Person_Medication_Request_for_Pharmacist`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ include `MR_MRR_additional_fields`
+ `inform_with`: `ce74e177-9c3b-4426-aeec-294674f2d65a` (string, optional) - Identifier of person's auth method.

### `Medication_request_Private_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request_Private`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

### `Medication_request_Private_Response_with_Medical_Program_min`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request_Private`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

### `Medication_request_Reject_Public_Response`
+ `rejected_at`: `2017-04-20T19:14:13Z` (string, required) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - Rejected user identifier

### `Medication_request_Reject`
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `created_at`: `2018-11-13` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_from`: `2018-11-13` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2018-12-13` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `division` (`Division`, required)
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `employee` (`Employee_Minimal`, required)
+ `ended_at`: `2018-12-13` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `id`: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required) - Medication Request request identifier
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act. "medical_program" is absent
    - order - The request represents a request/demand and authorization for action. "medical_program" is required
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
    + licenses (array[`MSP_License`], required)
    + accreditation (MSP_Accreditation, optional)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `person` (`Person_Medication_Request`, required)
+ `request_number` : `0000-K8K5-5MTE-352H` (string, required) - Public medication request human readable number
+ `started_at`: `2018-11-13` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `status`: `ACTIVE` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ `reject_reason_code`: WRONG_SIGNATURE (enum, required) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
    - NO_REQUEST_NEEDED
    - NO_SMS
    - PATIENT_REJECT
    - WRONG_DOSAGE
    - WRONG_PERIOD
    - WRONG_QTY
    - WRONG_SIGNATURE
+ `reject_reason`: `Помилка призначення. Несумісні препарати.` (string, optional) - Medication request reject reason
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ `inform_with`: `ce74e177-9c3b-4426-aeec-294674f2d65a` (string, optional) - Identifier of person's auth method.

### `Medication_request_Reject_Response`
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `division` (`Division`, required)
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `employee` (`Employee_Minimal`, required)
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act. "medical_program" is absent
    - order - The request represents a request/demand and authorization for action. "medical_program" is required
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
    + licenses (array[`MSP_License`], required)
    + accreditation (MSP_Accreditation, optional)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `person` (`Person_Medication_Request`, required)
+ `reject_reason_code`: WRONG_SIGNATURE (enum, required) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
    - NO_REQUEST_NEEDED
    - NO_SMS
    - PATIENT_REJECT
    - WRONG_DOSAGE
    - WRONG_PERIOD
    - WRONG_QTY
    - WRONG_SIGNATURE
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `status`: `REJECTED` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`
+ note: some additional info (string, optional) - Additional information
+ blocked_to: `2021-12-18T14:40:16Z` (string, optional, nullable) - Blocked to date - ISO 8601 date and time in UTC timezone.
+ `blocked_by_legal_entity` (`blocked_by_legal_entity_short`, optional) - Legal entity identifier who blocked MR
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)

### `Medication_request_Public_Response_without_block_data`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ include `MR_MRR_additional_fields`

## `Medication Dispense`
### `Medication_Dispense_Request`
+ `medication_request_id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, required) - Key for the Medication request
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division_id`: `2fc70f30-08dc-493c-8d08-925905d7b1e8` (string, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program_id`: `6ee844fd-9f4d-4457-9eda-22aa506be4c4` (string, required) - Active medical program within which medications are going to be provided
+ `dispense_details` (array, fixed, required)
    + (object)
        + include `Medication_Dispense_Detail_Request`
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications. Should not be submitted if medical program requires digital sign, and it's optional if not requires 
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH). Should not be submitted if medical program requires digital sign, and should be if not requires and medical program has funding source NHS
+ note: `Some notes` (string, optional) - Some notes

### `Medication_Dispense_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ note: `Some notes` (string, optional) - Some notes
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Response_for_Pharmacist`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response_for_Pharmacist`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ note: `Some notes` (string, optional) - Some notes
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Details_Response_for_MSP`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Medication_Dispense_Response_Private`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (`Medication_request_Private_Response`, required) - Medication request
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ note: `Some notes` (string, optional) - Some notes
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Response_without_2d_codes`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response_without_2d_codes`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ note: `Some notes` (string, optional) - Some notes
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Detail_Request`
+ `program_medication_id`: `64c06ebc-0266-4645-85f0-7a6900d7dfbe` (string, optional) - Program participant id
+ `medication_id`: `787b6ef1-1d3a-4129-849c-87716c9a2130` (string, required) - Identifier of brand medications
+ `medication_qty`: 10.34 (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `sell_price`: 18.65 (number, optional) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol). Must be submitted if medical program has funding source NHS
+ `sell_amount`: 186.5 (number, optional) - total pharmacy's price for the requested medication quantity. Must be submitted if medical program has funding source NHS
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested medication quantity. Must be submitted if medical program has funding source NHS
+ `medication_2d_codes` (array[`Medication_2d_code`], optional) - array of medication 2d codes

### `Medication_Dispense_Detail_Response`
+ `medication` (`Medication_Short`, required) - Identifier of brand medications
+ `program_medication_id`: `64c06ebc-0266-4645-85f0-7a6900d7dfbe` (string, optional) - Program participant id
+ `medication_qty`: '10.34' (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `sell_price`: 18.65 (number, optional) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, optional) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested medication quantity
+ `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program
+ `medication_2d_codes` (array[`Medication_2d_code`], optional) - array of medication 2d codes

### `Medication_Dispense_Detail_Response_without_2d_codes`
+ `medication` (`Medication_Short`, required) - Identifier of brand medications
+ `program_medication_id`: `64c06ebc-0266-4645-85f0-7a6900d7dfbe` (string, optional) - Program participant id
+ `medication_qty`: 10.34 (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `sell_price`: 18.65 (number, optional) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, optional) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested medication quantity
+ `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program

### `Medication_Dispense_Process_Request`
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division` (`Division_Declaration`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
    + working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
    + location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.
    + status: ACTIVE (enum, required)
        - ACTIVE
        - INACTIVE
    + mountain_group: false (boolean, optional)
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required)
    + `no_tax_id`: false (boolean, optional)
    + phones (array[`Phone`], optional)
+ `payment_amount`: 50 (number, required) - receipt amount which was paid by patient (UAH)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ note: `Some notes` (string, optional) - Some notes
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Process_Request_for_Pharmacist`
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division` (`Division_Declaration`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
    + working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
    + location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.
    + status: ACTIVE (enum, required)
        - ACTIVE
        - INACTIVE
    + mountain_group: false (boolean, optional)
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `medication_request` (`Medication_request_Public_Response_for_Pharmacist`, required) - Medication request
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required)
    + `no_tax_id`: false (boolean, optional)
    + phones (array[`Phone`], optional)
+ `payment_amount`: 50 (number, required) - receipt amount which was paid by patient (UAH)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ note: `Some notes` (string, optional) - Some notes
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

###`Medication_2d_code`
+ `medication_2d_code`: `0104820005161713171812001022431115 211XV82HPV` (string, required) - decoded 2d code


#Party
### `Party_Short`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Party_Request`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ email: email@example.com (string, optional)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `Party_Request_old`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional) - true if employee doesn't have tax_id and false otherwise
+ tax_id: 3126509816 (string, required) - if no_tax_id=true then passport number, otherwise tax_id
+ email: email@example.com (string, optional)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.

### `Party_Response_old`
+ id:`b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ `verification_status`: `NOT_VERIFIED` (string, required) - status of party verification according to `PARTY_VERIFICATION_STATUSES` dictionary
+ declaration_limit: `0` (number) - TO BE DEPRECATED, always zero! maximum number of declaration with a doctor.
+ declaration_count: `0` (number) - TO BE DEPRECATED, always zero! current number of declaration with a doctor.

### `Party_Create_v2`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ email: email@example.com (string, required)
+ birth_date: `1991-08-19` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.


### `Party_Update`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ declaration_limit: `2000` (number) - maximum number of declaration with a doctor.
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `Party_Update_v2`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `crud_party`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `crud_party_post`
+ include `crud_party`

### `crud_party_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_party`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### Education
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ institution_name: Академія Богомольця (string, required)
+ issued_date: `2017-02-28` (string, optional)
+ diploma_number: DD123543 (string, required)
+ degree: MASTER (string, required) - `Dictionary EDUCATION_DEGREE`
+ speciality: Педіатр (string, required)


### ScienceDegree
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ degree (string, required) - `Dictionary SCIENCE_DEGREE`
+ institution_name: Академія Богомольця (string, required)
+ diploma_number: DD123543 (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: `2017-02-28` (string, optional)

### Qualification
+ type: SPECIALIZATION (string, required) - `Dictionary QUALIFICATION_TYPE`
+ institution_name: Академія Богомольця (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: `2017-02-28` (string, required) - дата отримання сертифікату
+ certificate_number: `2017-02-28` (string, required)
+ valid_to: `2017-02-28` (string, optional) - дійсний до
+ additional_info: додаткова інофрмація (string, optional) - додаткова інформація

### Speciality
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ speciality_officio: true (boolean, required) - основна спеціалазація, лише одна має бути true
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: `2017-02-28` (string, required) - дата отримання
+ valid_to_date: `2020-02-28` (string, optional) - дата дії до
+ certificate_number: AB/21331 (string, required)

### `Speciality_party`
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: `2017-02-28` (string, required) - дата отримання
+ valid_to_date: `2020-02-28` (string, required) - дата дії до
+ certificate_number: AB/21331 (string, required)

### Affordance
+ action (string, required) - Affordance action.
+ url (string, required)

### `Legal_Entity_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ public_name: Клініка Ноунейм (string, required)
+ type: MSP (string, required)
+ edrpou: 5432345432 (string, required)
+ status: ACTIVE (enum, required)
    - ACTIVE
    - CLOSED

### `blocked_by_legal_entity_short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ public_name: Клініка Ноунейм (string, required)
+ type: MSP (string, required)
+ edrpou: 5432345432 (string, required)
+ status: ACTIVE (enum, required)
    - ACTIVE
    - CLOSED

### `Legal_Entity_For_Declaration_Short`
+ short_name: Ноунейм (string, required)
+ name: Клініка Ноунейм (string, required)
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ edrpou: 5432345432 (string, required)

### `Legal_Entity_Short_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)

### `Medication_Short`
+ `name` : `Амідарон` (string, required)
+ `type`: `MEDICATION` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, optional)
+ `form_pharm`: `DISPERSIBLE_TABLET` (string, optional) - Pharmaceutical form of drugs. FORM_PHARM_LIST dictionary used for the values.
+ `drlz_sku_id`: `0404466792737630283703997321` (string, optional) - identifier of a product out of external DRLZ register

### `MR_MRR_additional_fields`
+ priority: routine (enum, optional) - `Dictionary MEDICATION_REQUEST_PRIORITY`
    - routine - The request has normal priority.
    - urgent - The request should be actioned promptly - higher priority than routine.
    - asap - The request should be actioned as soon as possible - higher priority than urgent.
    - stat - The request should be actioned immediately - highest possible priority. E.g. an emergency.
+ `prior_prescription` (Reference, optional, fixed-type) - An order/prescription that is being replaced
    + identifier (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type, required)
                + (Coding)
                    + code: `medication_request` (string, required)
+ `container_dosage` (object, optional) - It presents a dosage of primary package required by Doctor in Medication Request.
    + `system`: `MEDICATION_UNIT` (string, required)
    + `code`: `ML` (string, required)
    + `value` : 4 (number, required)

### `Dosage_Instruction`
+ sequence: 1 (number, required) - The order of the dosage instructions
+ text: `0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day` (string, required) - Free text dosage instructions e.g. SIG
+ `additional_instruction` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/SNOMED/additional_dosage_instructions` (string)
             + code: `311504000` (string)
+ `patient_instruction`: `0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day` (string, optional) - Patient or consumer oriented instructions
+ timing (Timing, optional)
- One Of
    + as_needed_boolean: true (boolean)
    + as_needed_codeable_concept (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding
                + system: `eHealth/SNOMED/medication_as_needed_reason_codes` (string)
                + code: `144008` (string)
+ site (Codeable_Concept) - Body site to administer to
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/anatomical_structure_administration_site_codes` (string)
            + code: `344001` (string)
+ route (Codeable_Concept) - How drug should enter body
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/route_codes` (string)
            + code: `46713006` (string)
+ method (Codeable_Concept) - Technique for administering medication
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/administration_methods` (string)
            + code: `419747000` (string)
+ `dose_and_rate` (Dose_and_Rate, optional)
+ `max_dose_per_period` (Ratio, required)
+ `max_dose_per_administration` (Simple_Quantity, required)
+ `max_dose_per_lifetime` (Simple_Quantity, optional)

### `Dose_and_Rate`
+ type (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/dose_and_rate` (string, required)
            + code: 'ordered' (string, required)
- One Of
    + dose_range (Range)
    + dose_quantity (Simple_Quantity)
- One Of
    + rate_ratio (Ratio)
    + rate_range (Range)
    + rate_quantity (Simple_Quantity)

### `Innm_Dosage_for_Medication_request_Responce`
+ `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required) - `Identifier medication with type **INNM_DOSAGE**`
+ `medication_name`: `Аміодарон 200мг таблетки` (string, required) - `Name of medication with type **INNM_DOSAGE**`
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required) - Dosage of innm_dosage object (to be excluded)
+ `ingredients` (array[`Ingredient_v2`], required) - Details of dosage of INNM ingredients, added 2022-04-23, part 1
+ `medication_qty`: 10.34 (number, required) - Medication quantity issued by the doctor

### `Ingredient_v2`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `name` : `Інсулін деглюдек` (string, required)
+ `name_original` : `Insulin degludec` (string, required)
+ `sctid`: `52574003` (string, optional) - innm CNOMED code
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required)

### `Dosage_drug`
+ `numerator_unit`: MG (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 200 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Dosage_container`
+ `numerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 1 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Person_Medication_Request`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

### `Person_Medication_Request_Private`
+ id: `01352B970879A80E19B60C15C8E488DA26CABC3B9F7FA71684904A99DBD5ACE4` (string, required)
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

### `Person_Medication_Request_for_Pharmacist`
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

### `Person_Medication_Request_Sign`
+ age: 35 (number, required) - full years between medication request date and birth date
+ first_name: Петро (string, required)
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Employee_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + no_tax_id: true (boolean, required)
    + include `Party_Short`
    + email: email@example.com (string, optional)
    + phones (array[`Phone`], optional)

### `Employee_Minimal_cabinet`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`

### `Employee_For_Declaration_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`

### `Medical_Program_Response_min`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `medical_program_settings`: (`Medical_program_settings`, required) - some conditions for using program
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

### `Medical_Program_Response_min_without_settings`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

