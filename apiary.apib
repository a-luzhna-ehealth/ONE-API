FORMAT: 1A
HOST: https://api.ehealth.gov.ua

# Electronic Healthcare System of Ukraine

Version: 9.5.6

## General Information

Electronic healthcare system of Ukraine consists of central database and medical information systems (MIS).
Central database belongs to Ukrainian state, represented by the National Health Service of Ukraine (NHSU).

Users of the electronic healthcare system of Ukraine are individuals and
legal entities who are registered in the electronic health system and
have access rights in accordance with the Procedure for the Operation of the electronic healthcare system.

## Abbreviations, acronyms, explanations

* NHSU - National Healthcare System of Ukraine
* MIS - Medical Information System
* PIS - Patient Information System
* ESOZ - Ukrainian abbriviation of electronic healthcare system

* MUST - This word mean that the definition is an absolute requirement of the specification.
* MAY - This word mean that an item is truly optional.
* CAN NOT - This phrase mean that the definition is an absolute prohibition of the specification.

## Interacting with API

Our API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).
It has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors.
We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients.

### Verbs

As per RESTful design patterns, API implements following HTTP verbs:

- `HEAD` - Can be issued against any resource to get just the HTTP header info.
- `GET` - Read resources. Should hever change resources on server (idempotency) since most of http proxies and services may reply same request multiple times.
- `POST` - Create new resources.
- `PUT` - Replace resources. Idempotent. (Can be used as `insert or update` method, when we want clients to don't care whenever entity is exists in our system.)
- `PATCH` - Same as `PUT`, but replaces subset of fields instead of full entity. Should never be used as `insert of update` pattern.
- `DELETE` - Remove resources.

### Status codes

Code  | Description
----- | -----------
`200` | Everything worked as expected.
`201` | Created.
`202` | Accepted.
`400` | Bad Request. 
`401` | Unauthorized. No valid API key provided or API key doesn't match project.
`402` | The parameters were valid but the request failed.
`403` | Source or destination account is disabled.
`404` | Not Found. The requested resource doesn't exist.
`415` | Incorrect ```Content-Type``` HTTP header.
`422` | Semantic error or similar. For example, value is not included in enum of allowed values.
`409` | Logical error. For example, odject in current status can not be modified. 
`429` | Too Many Requests. Rate limit is exceeded.
`500` `502` `503` `504` | Server Errors. Something went wrong on our end.

### Field naming

Fields are named in `snake_case` since it's more common for
our stack and [20% easier to read](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?tp=&arnumber=5521745).

### Authentication 

In general there is 3-phase authentication routine:

1) Issuing Session Token (OAuth);
2) Issuing Approval Token (ABAC);
3) Issuing Access Token (JWT).

### Request identifier

Each API request has an associated request identifier.
You can find it in `X-Request-ID` response header or inside `meta.request_id` property of returned JSON.

You can also find request identifiers in the URLs of individual request logs in your Dashboard.
If you need to contact us about a specific request, providing the request identifier will
ensure the fastest possible resolution.

All Request ID's are prefixed with a human-readable name of server that served your request.

```
X-Request-ID: flash-99spDSoim3i
```

### Content Type

`Content-Type` header should be always `application/json`

### Request structure

Request consist with a root object that contain resource and metadata as it's childs:

```
{
  "resource": {
    "name": "Alex",
    "surname": "Gray",
    "email": "me@example.com",
    "credentials: [
      {"method": "passsword", "password": "notasecret"}
    ]
  },
  "format_response": true,
  "redirect_browser": true
}
```

### Response structure

Response can consist of 5 root properties:

* `meta` - contains: 1) URL of the requested resource `url`;
                     2) requested response type `type`, may be either list or object;
                     3) HTTP status `code`;
                     4) idempotency key (`idempotency_key`);
                     5) request id (`request_id`).
* `urgent` - Notifications and counters.
* `errors` - Error description. MUST be present when status code is not 2XX, 3XX. CAN NOT be present when data is present.
* `data` - Requested resource. MUST be present when status code is 2XX, 3XX. CAN NOT be present when error is present.
* `paging` - Pagination data.
* `sandbox` - Optional data provided by sandbox environment, for development purposes.

```
{
  "meta": {
    "url": "https://qbill.ly/transactions/",
    "type": "list",
    "code": "200",
    "idempotency_key": "iXXekd88DKqo",
    "request_id": "qudk48fFlaP"
  },
  "urgent": {
    "notifications": ["Read new emails!"],
    "unseen_payments": 10
  },
  "data": {
    "type": "resource_name",
    <...>
  },
  "paging": {
    "limit": 50,
    "cursors": {
      "starting_after": "MTAxNTExOTQ1MjAwNzI5NDE=",
      "ending_before": "NDMyNzQyODI3OTQw"
    },
    "has_more": true
  },
  "sandbox": {
    "debug_varibale": "39384",
    "live": "false"
  }
}
```

### Errors

All errors is returned in JSON format if another `Content-Type` is not specified.
This means that your will receive JSON for requests with HTTP 415 code when incorrect `Content-Type` is provided.

#### Error Object Properties

You can find all necessary information about occurred error in a response `error` property. It can have following fields:

Fields | Required | Description
--------- | ----------- | -----------
`type` | true | General error type. You should return human-readable error message based on this field as a key. Type descriptions is listed in next section.
`invalid` | false | Collection of validation errors for your request.
`invalid[].entry_type` | true | Type of invalid field.
`invalid[].entry` | false | Name or JSON path to invalid data property.
`invalid[].rules` | false| Failed rules for invalid property. You can find supported validation rules at [Request Validators](#request-validators) table. Server may optinally skip this field, when validation rules is perefferd to stay secret or hard to extract from validator.
`invalid[].params` | false| Optional parameters that can be used in a human-readable error message, to make it easier to understand. Usually it contains limit values for failed validator.
`message` | false | Human readable message for API developer.

Example error response:

```
{
    "data": {
        "error": {
            "invalid": [
                {
                    "entry": "$.type",
                    "entry_type": "json_data_property",
                    "rules": [
                        {
                            "description": "Value AMB/ not found in the dictionary eHealth/episode_types",
                            "params": [],
                            "rule": "invalid"
                        }
                    ]
                }
            ],
            "message": "Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors.",
            "type": "validation_failed"
        },
        "eta": "2019-04-23T09:13:02.415",
        "status": "failed",
        "status_code": 422
    },
    "meta": {
        "code": 200,
        "request_id": "806e0f81-ac97-470e-988f-6391e9abf642#28157",
        "type": "object",
        "url": "http://api-medical-events.me.svc.cluster.local/api/jobs/5cbed6e2ed59d30001e54b92"
    }
}
```

#### Error Types

Parameter | Description
--------- | -----------
`access_denied` | Authorization not passed
`forbidden` | User does not have permissions to access the resource
`content_type_invalid` | Invalid HTTP request `content-type`.
`validation_failed` | Failed validation on JSON request body or form data. 
`request_too_large` | Request body was to large to process it.
`request_conflict`| Request causes logical errors
`internal error`| Error on the server

#### Error Entry Types

Entry Type | Description
--------- | -----------
`json_data_proprty` | JSON document is invalid. `entry` will contain JSON Path to invalid property.
`form_data_field` | HTTP request field (for `form-data` requests) is invalid. 
`query_param` | HTTP query parameter is invalid.
`body` | Mailformed request body.
`header` | HTTP request header is invalid.

#### Validation Rules

List of possible validation rules:

Rule | Params | Description
-------------- | ----------- | -----------
`cast` | `[types]` | The field type should be in `types`.
`required` | `[]` | The field is required and should not be `nil`.
`format` | `[patterns]` | The field should match all regular expressions in `patterns` list.
`inclusion` | `[enum]` | Field value should be in `enum`.
`invalid`| `[]` | Field value is not valid according to specification
`exclusion` | `[enum]` | Field value should NOT be in `enum`.
`subset` | `[set]` | Field value should be subset of `set`.
`length` | `{min:_, max:_, is:_, exclusive:true|false}` | List or string length should be equal to `is` value, less than `max` and bigger than `min` value. Params is optional, but one of them should always be present. `exclusive` is false by default.
`number` | `{greater_than:_, less_than:_, greater_than_or_equal_to:_, less_than_or_equal_to:_, multiple_of:_}` | The field value must be a number that is greater than `greater_than` and less than `less_than`.
`confirmation` | `[]` | The field value of field must match confirmed field (eg. `password_confirmation` should match `password`).
`acceptance` | `[]` | The field value should be true.
`email` | `[patterns]` | The field value must be a valid email address respectively to `patterns`.
`phone_number` | `[patterns]` | The field value must be a valid phone number respectively to `patterns`. *Usually it means that is should be in international format (with `+3`).*
`card_number` | `[]` | The field value should be a valid Visa or MasterCard card number. (By luhn algoryghm.)
`metadata` | `[]` | The field must be a [valid metadata object](http://docs.apimanifest.apiary.io/#introduction/optional-features/metadata).
`unique` | `[]` | The field must be a list with all it's items unique.
`schemata` | `[]` | JSON Schema specific error core.
`schema` | `[]` | JSON Schema specific error core.
`dependency` | `[json_paths]` | Property expects another property to exist.
`json` | `[]` | The field under validation must be a valid JSON string.
`authentification_code` | `{resent: true}` | OTP or other authentification code was invalid. User should retry with re-entering it. `resent` property will tel is code was automatically resent upon failed validation.
`date`, `datetime`, `timestamp` | `[after:_, before:_, after_or_at:_, before_or_at:_]` | Invalid datetime representation.
`url` | `[patterns]` | Field should contain a valid URL.

### Pagination

You can use next search parameters to operate pagination:

Arguments:

- `page_number` (optional) - A number of a page in the list;
- `page_size` (optional) -  A limit on the number of objects to be returned, between 1 and 100. Default: 50;

### HTTP Redirects

API uses HTTP redirection where appropriate. Clients should assume that any request may result in a redirection. Receiving an HTTP redirection is not an error and clients should follow that redirect. Redirect responses will have a Location header field which contains the URI of the resource to which the client should repeat the requests.

Status codes:

- `301` - Permanent redirection. The URI you used to make the request has been superseded by the one specified in the Location header field. This and all future requests to this resource should be directed to the new URI.
- `302`, `307` - Temporary redirection. The request should be repeated verbatim to the URI specified in the Location header field but clients should continue to use the original URI for future requests.
- `303` - The request was successfully performed, the result can be found by the redirect URI.
Other redirection status codes may be used in accordance with the HTTP 1.1 spec.

### File Uploads

#### For files less than 10 MB

For small files it's appropriate to send base64 encoded file contents as JSON field:

```
{
    name: "My Name",
    image: "sdasdpjoijhwhwe83280u2380wef=="
}
```

#### For larger files - Multi-Stage Uploads (Network Transactions)

Multi-stage process:

1). User initiates uploading;
2). Server provides the link to media storage;
3). User upload file using provided link.

## Optional Features

### Rate Limits (Throttling)

We throttle our APIs by default to ensure maximum performance for all developers.

Rate limiting of the API is primarily considered on a per-consumer basis.
All your projects share a same rate limit, to avoid API-consuming fraud.
Rate limits depend on your account type.

Currently free accounts is rate limited to 1000 API calls every 15 minutes,
but this value may be adjusted at our discretion.

### Idempotent Requests

From a RESTful service standpoint, for an operation (or service call) to be idempotent,
clients can make that same call repeatedly while producing the same result.
In other words, making multiple identical requests has the same effect as
making a single request. However, if you are working with async methods,
new job will not be created before previous identical request is not performed.

### Ordering Lists and Collections

By default, all collections are ordered in ascending chronological order.

# Group Authentication

## MIS Authentication [/auth/mis]

Different environments are using different hosts in endpoints:

Environmnet | Host
------------|-----
DEMO        | https://auth-demo.ehealth.gov.ua
PREPROD     | https://auth-preprod.ehealth.gov.ua
PROD        | https://auth.ehealth.gov.ua

In general 3 stage authentication purpose is to get active JWT Bearer which
can be obtained using the folling example:

```
var user      = __ENV.USER;
var data      = JSON.parse(open("./assets/" + user));
var authorize = JSON.parse(open("./assets/authorize@" + user));
var grant     = JSON.parse(open("./assets/grant@" + user));

export function setupAuth() {

   let res1 = http.post("https://auth-demo.ehealth.gov.ua/auth/login",
       JSON.stringify(data), { headers: { 'Content-Type': 'application/json' } });
       check(res1, { "User is entered: ": r => r.json().meta.code < 300, });

   let res2 = http.post("https://auth-demo.ehealth.gov.ua/oauth/apps/authorize",
       JSON.stringify(authorize), { headers:
          { 'Content-Type': 'application/json',
            'Authorization' : 'Bearer ' + res1.json().data.value } });
       check(res2, { "User is authorized by app: ": r => r.json().meta.code < 300, });

   grant.token.code = res2.json().data ? res2.json().data.value : 'error';
   let res3 = http.post("https://auth-demo.ehealth.gov.ua/oauth/tokens",
       JSON.stringify(grant), { headers:
          { 'Content-Type': 'application/json',
            'Authorization' : 'Bearer ' + res1.json().data.value } });
       check(res3, { "User is granted: ": r => r.json().meta.code < 300, });

   return { data: res3 };
}
```

### Create Session Token by Object [PUT /auth/login]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0323
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571446858/Login">Login</a>

+ Request (application/json)
    + Attributes (object)
        + token (object)
            + `grant_type`: `password` (string, required) - authentication type
            + `email`: `user@company.com` (string) - email address of ESOZ user
            + `client_id`: `00` (string, required) - MIS identifier
            + `scope`: `app:authorize' (string, required) - ABAС rule

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Create Session Token by Params [GET /sign-in]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Link to Confluence | N/A

+ Parameters
    + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
    + `redirect_uri`: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + email: email@example.com
    + `user_data`: `base64_string` - Auth request signed on client side
    + state: `eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9` (string, optional) - Randomly generated, opaque, and non-guessable string generated by client that will be transferred to client with grant code

+ Response 200 (text/html; charset=UTF-8)
    + Headers

### Issuing Approval Token [POST /oauth/apps/authorize]

```
{
    "app": {
        "client_id": "00000000-0000-0000-0000-000000000000",
        "redirect_uri": "https://test.com",
        "scope": "division:read client:read app:read_pis employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read otp:read otp:write person:read patient_summary:read encounter:write encounter:read encounter:cancel episode:write episode:read job:read condition:read condition:write observation:read observation:write immunization:read immunization:write allergy_intolerance:read allergy_intolerance:write medication_statement:read medication_statement:write device:read device:write risk_assessment:read risk_assessment:write medication_dispense:read drugs:read medication_request:details medication_request:read medication_request:reject medication_request:resend medication_request_request:read medication_request_request:reject medication_request_request:sign medication_request_request:write diagnostic_report:read diagnostic_report:write diagnostic_report:cancel procedure:read procedure:write procedure:cancel service_request:makeinprogress service_request:complete service_request:recall service_request:cancel service_request:write service_request:read service_request:use approval:create program_service:read medication_administration:read medication_administration:write healthcare_service:read employee_role:read person_request:write person_request:read preperson:read preperson:write authentication_method_request:write merge_request:write merge_request:sign merge_request:read composition:create composition:search composition:read composition:sign composition:cancel care_plan:write care_plan:read approval:read approval:cancel license:read clinical_impression:read rule_engine_rule:read medical_event_context:read clinical_impression:write person_verification:details person_verification:write person_emergency_contact:read device_definitions:read device_request:write device_request:read device_request:resend device_request:revoke specimen:write specimen:read specimen:reject"
    }
}
```

+ Request (application/json)
    + Headers
        Authorization: Bearer 432fsdfg543252345tfgdsgdft2345 - access_token with the `app:authorize` scope
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

    + Attributes
        + app (required)
            + client_id: `client-1380df72-275a-11e7-93ae-92361f002671` (string, required) - ID of client that is granted with access to user's resources.
            + scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes that are granted to the client on the user's behalf.
            + `redirect_uri`: `http://example.com/my_success_login_page` (string, required) - URL of client where user will be redirected on Approval creation.

+ Response 201 (application/json)
    + Headers
        Location: http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (`Response_OK`)
        + urgent
            + `redirect_uri`: `http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09`

### Issuing Grant Access Token [POST /oauth/tokens]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0324
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571807257/Exchange+oAuth+Code+Grant+to+Access+Token">Issuing Grant Access Token</a>

```
{
    "token": {
        "grant_type": "authorization_code",
        "code": "00000000000000000000000000000000",
        "client_id": "00000000-0000-0000-0000-000000000000",
        "scope": "division:read employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read division:activate division:deactivate division:details division:read division:write employee:deactivate employee:details employee:read employee:write employee_request:approve employee_request:read employee_request:reject employee_request:write legal_entity:read healthcare_service:read healthcare_service:write employee_role:read employee_role:write"
    }
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Reissuing Session Token [POST /oauth/tokens]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0325
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17571315778/Use+Refresh+Token+for+Access+Token+extension">Reissuing Session Token</a>

```
{
    "token": {
        "grant_type": "refresh_token",
        "code": "00000000000000000000000000000000",
        "client_secret": "...",
        "client_id": "00000000-0000-0000-0000-000000000000",
        "scope": "division:read employee:read employee_request:approve employee_request:reject employee_request:read legal_entity:read division:activate division:deactivate division:details division:read division:write employee:deactivate employee:details employee:read employee:write employee_request:approve employee_request:read employee_request:reject employee_request:write legal_entity:read healthcare_service:read healthcare_service:write employee_role:read employee_role:write"
    }
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Terminate Session [POST /auth/logout]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-009-001-001-0326
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/18448646240/DRAFT+PIS.+Logout">Logout</a>


+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

### Issuing Nonce Token [POST /oauth/nonce]

Key                | Value
-------------------|-----------
ESOZ API ID        | N/A
Link to Confluence | N/A

This access point allows you to get a nonce (one-time JWT) for an
active client of the system. The `client_secret` field must be passed if the
`client type` = TRUSTED_PIS. An example of an encoded JWT information message in the token field:

```
{
   "aud": "mithril-login",
   "exp": 1523439201,
   "iat": 1523438301,
   "iss": "EHealth",
   "jti": "efe1f08e-d4b4-4cef-a02c-78ea4a1dda25",
   "nbf": 1523438300,
   "nonce": 123,
   "sub": 123,
   "typ": "доступ"
}
```

+ Request (application/json)
    + Headers
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4
    + Attributes (object)
        + `client_id`: `30074b6e-fbab-4dc1-9d37-88c21dab1847` (string, required)
        + `client_secret`: `c2778f3064753ea70de870a53795f5c9` (string, optional)


+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
           + token: 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJtaXRocmlsLWxvZ2luIiwiZXhwIjoxNTIzNDM5MjAxLCJpYXQiOjE1MjM0MzgzMDEsImlzcyI6IkVIZWFsdGgiLCJqdGkiOiJlZmUxZjA4ZS1kNGI0LTRjZWYtYTAyYy03OGVhNGExZGRhMjUiLCJuYmYiOjE1MjM0MzgzMDAsIm5vbmNlIjoxMjMsInN1YiI6MTIzLCJ0eXAiOiJhY2Nlc3MifQ.UZ6S92h3nAG-GKY_XUE1Rc6uR_BuqR8ufUJfMhhKtNmt7DkkQlU49qPXjL0LFddVz1E2DXi2a-BQ0FG-DHsTHA' (string, required)

# Group Administration

## Legal Entities [/admin/legal_entities]

### Get Legal Entities [GET /api/v2/legal_entities{?edrpou,legal_entity_id,settlement_id,type,status,nhs_verified,page,page_size}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0176
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570824360/DRAFT+Get+Legal+Entities+V2">DRAFT Get Legal Entities V2</a>

+ Parameters
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + settlement_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + type: MSP (enum, optional)
        - MSP
        + Default: MSP
    + status: ACTIVE (enum, optional)
        - ACTIVE
        - CLOSED
    + `nhs_verified`: false (boolean, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)
    + Headers
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        X-Custom-PSK: a2aa05c76f3f2d91870f923a53cc8aa8f23bbc01a8238d1c2c26d4299715a7e4

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
                + include (`Legal_Entity_Response_Public_V2`)
                + status: ACTIVE (enum, required)
                    - ACTIVE
                    - CLOSED
                    - SUSPENDED


### Get Legal Entity by Id [GET /api/v2/legal_entities/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0177
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570562268/DRAFT+Get+Legal+Entity+by+ID+V2">Get Legal Entity by Id</a>

+ Parameters
    + `id`

+ Response 200 (application/json)

### Create or Update Legal Entity V2 [PUT /api/v2/legal_entities]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0178
Scope              | legal_entity:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570857172/DRAFT+Create+Update+Legal+Entity+V2">Create or Update Legal Entity V2</a>

+ Response 200 (application/json)

### Get Related Legal Entities [GET /api/legal_entities/{id}/related]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-002-0186
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570922693/DRAFT+Get+legators+Legal+Entities">Get Legators Legal Entities</a>

+ Parameters
    + `id`

+ Response 200 (application/json)

## Divisions [/admin/divisions]

### Get Legal Entity Divisions [GET /divisions]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-006-001-0087
Scope              | related_legal_entities:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570889841/DRAFT+Get+divisions">Get Divisions</a>

+ Response 200 (application/json)

### Licenses [/admin/licenses]

### Get Licenses [GET /api/licenses]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-003-0187
Scope              | license:read
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570824387/DRAFT+Get+licenses">Get Licenses</a>

+ Response 200 (application/json)

### Create License [POST /api/licenses]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-003-0188
Scope              | license:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570758930/DRAFT+Create+license">Create License</a>

+ Response 200 (application/json)

### Update License [PATCH /api/licenses]

Key                | Value
-------------------|-----------
ESOZ API ID        | API-005-009-003-0188
Scope              | license:write
Auth               | yes
Link to Confluence | <a href="https://e-health-ua.atlassian.net/wiki/spaces/ESOZ/pages/17570136425/DRAFT+Update+license">Update License</a>

+ Response 200 (application/json)

# Group Medical Events

## Composition [/medical_events/compositions]

### Create Composition Titile [GET /api/patients/{patient_id}/composition_title]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

### Submit Composition [GET /api/patients/{patient_id}/compositions]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

### Get Medication Request Details in Composition Context [GET /api/persons/{person_id}/compositions/{composition_id}/medication_requests/{id}]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

# Group Patient Personal Data

### Persons [/persons]

#### getPerson [GET]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

### Prepersons [/prepersons]

#### getPreperson  [GET]

Key                | Value
-------------------|-----------
ESOZ API ID        |
Scope              | legal_entity:read
Auth               | yes
Link to Confluence | N/A

+ Response 200 (application/json)

# Group Additional Services

# Data Structures

## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_Collection_V2`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination__V2`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: https://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `6617aeec-15e2-4d6f-b9bd-53559c358f97#17810` (string) - [Request ID](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.
        
### `Response__Error_ValidationFailed_Extended`
+ `error` (object)
    + type: validation_failed (string) - type of an error.
    + message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
    + invalid (array)
        + (object)
            + `entry`: `$.cvv` (string, required) - JSON Path to an invalid property.
            + `entry_type`: `json_data_property` (string, required) - Type of error.
            + `rules` (array)
                + (object)
                    + `description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + params (object) - Validation Parameters.
                        + `values` (array)
                    + `raw_description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + `rule`: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
                            - required
                            - inclusion

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 50 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

### `Response__Pagination__V2`
+ page_number: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 23 (number) - Total number of pages.

## `Access_Tokens`
### `Access_Token`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - OAuth токен доступу
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - Ідентифікатор користувача
+ name: `access_token` (string, required) - Ім'я токена
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - Ідентифікатор токена
+ expires_at: 1498749591 (number, required) - Час, коли токен стає невалідним
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - перелік необхідних доступв через пробіл
    + refresh_token: `my-oauth-refresh-token` (string, required) - Оовлюючий токен
    + redirect_uri: `https://example.com/` (string, required) - URI перенаправлення
    + `grant_type`: `authorization_code`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Ідентифкатор авторизованого користувача

### `Access_Token_1`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - Ідентифікатор користувача
+ name: `change_password_token` (string, required) - Ім'я токена
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - Ідентифікатор токена
+ expires_at: 1498749591 (number, required) - Час, коли токен стає невалідним
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - перелік необхідних доступв через пробіл
    + `grant_type`: `refresh_token`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Ідентифкатор авторизованого користувача

### `Legal_Entity_Response_Public_V2`
+ `edr` (edr_data, required)
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ type: PRIMARY_CARE (string, required) - type of legal entity [PRIMARY_CARE/OUTPATIENT/PHARMACY]. MIS can't be created using this WS.
+ residence_address (Address, optional, required) - address where the legal entity is physically located
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ accreditation (MSP_Accreditation, optional)
+ license (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string)
    + type: MSP (string, optional) - License type `Dictionary LICENSE_TYPE`
    + license_number: fd123443 (string, optional)
    + issued_by: Кваліфікацйна комісія (string)
    + issued_date: `2017-02-28` (string)
    + expiry_date: `2017-02-28` (string)
    + `active_from_date`: `2017-02-28` (string)
    + what_licensed: реалізація наркотичних засобів (string, optional)
    + order_no: ВА43234 (string) - номер наказу
+ `archive`(array[`Archive`], optional)
+ public_offer(object, fixed-type, required)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Archive`
+ date: `2017-02-28` (string, required) - the date when paper documents were transferred to archive
+ place: `вул. Грушевського 15` (string, required) - the address of building where paper documents are

### `MSP_Accreditation`
+ category: SECOND (string, required) - `Dictionary ACCREDITATION_CATEGORY` category of accreditation legal entity. At least one of type must be present. Each type can be represented only once.
+ issued_date: `2017-02-28` (string, optional) - дата видачі
+ expiry_date: `2017-02-28` (string, optional)
+ order_no: fd123443 (string, required) - номер наказу МОЗ
+ order_date: `2017-02-28` (string, required) - дата наказу МОЗ

### Phone
+ type: MOBILE (string, required) - `Dictionary PHONE_TYPE` type of phone Land Line or Mobile. At least one of type must be present. Each type can be represented only once.
+ number: `+380503410870` (string, required) - phone number in format '+38/'

### Email
+ type: PERSONAL, PUBLIC (enum[string], required)
+ email: `email@example.com` (string, required)

### Address
+ type: RESIDENCE (string, required) - `Dictionary ADDRESS_TYPE`. 
+ country: UA (enum[string], required) - `Dictionary COUNTRY`
+ area: Житомирська (string, required) - one of Ukraianian area
+ region: Бердичівський (string, optional) - district of area
+ settlement: Київ (string, required) - city name
+ `settlement_type`: CITY (string, required) - `Dictionary SETTLEMENT_TYPE` - type of settlement as city/town/village etc
+ `settlement_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - settlement identificator from uaadresses
+ `street_type`: STREET (string, optional) - `Dictionary STREET_TYPE` - type of street as street/road/line etc
+ street: `вул. Ніжинська` (string, optional) - street name
+ building: 15 (string, optional) - number of building
+ apartment: 23 (string, optional) - number of appartment
+ zip: 02090 (string, optional) - system of postal codes

### `edr_data`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional)
+ `legal_form`: 140 (string, optional) - `Business form of legal entity received from edr - Use dictionary LEGAL_FORM to show the name`
+ edrpou: 54323454 (string, required) -  Unified Register of Businesses and Organizations
+ kveds (array, required)
    + (object)
        + name: `Діяльність лікарняних закладів` (string, required)
        + code: `86.10` (string, required)
        + is_primary: true (boolean, required)
+ `registration_address` (`registration_address`, required)
+ state: 1 (number, required)

### `registration_address`
+ zip: `02090`
+ country: `УКРАЇНА`
+ address: `Волинська обл., місто Луцьк ВУЛИЦЯ КОНЯКІНА буд. 14 кв. 144`
+ parts (object)
    + atu: `Волинська обл., місто Луцьк`
    + atu_code: `0710100000`
    + street: `ВУЛИЦЯ КОНЯКІНА`
    + house_type: `буд.`
    + house: `14`
    + building_type: null
    + building: ``
    + num_type: `кв.`
    + num: `144`

